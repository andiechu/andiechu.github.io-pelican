<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>A Pelican Blog - 日志</title><link href="/" rel="alternate"></link><link href="/feeds/ri-zhi.atom.xml" rel="self"></link><id>/</id><updated>2018-08-05T22:58:00+00:00</updated><entry><title>艺术展上机器学习环境的搭建与配置记录</title><link href="/installing-and-configuring-for-machine-learning-enviroment-of-ai-art.html" rel="alternate"></link><published>2018-05-15T14:46:00+00:00</published><updated>2018-05-19T10:58:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2018-05-15:/installing-and-configuring-for-machine-learning-enviroment-of-ai-art.html</id><summary type="html">&lt;p&gt;最近公司要办一个艺术展，主要都是通过人工智能生成的互动作品。为了运行这些作品，我帮助公司配置了5台计算机作为开发环境。Linux 系统上坑比较多，这里记录一下碰到的问题，给以后其他人做一个参考。&lt;/p&gt;</summary><content type="html">&lt;p&gt;最近公司要办一个艺术展，主要都是通过人工智能生成的互动作品。为了运行这些作品，我帮助公司配置了5台计算机作为开发环境。Linux 系统上坑比较多，这里记录一下碰到的问题，给以后其他人做一个参考。&lt;/p&gt;
&lt;h2&gt;0x00 硬件准备&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;一台安装了 Linux 的 PC（具体安装方法如下文所示）&lt;/li&gt;
&lt;li&gt;最关键的是显卡的性能：至少 4 GB VRAM 的 NVIDIA 显卡（推荐 GTX 1080 ti 或 Titan X, GTX 1070 或 1060 也可以。GTX 1050 或许也可以，但是可能帧数会比较低、会出现卡顿）&lt;/li&gt;
&lt;li&gt;CPU：虽然没有显卡的参数重要，但是对最小处理速度仍然有要求，推荐是 Intel i5 及以上的配置。内存 16 GB 以上性能会比较好。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;0x01 安装 Ubuntu 16.04 LTS&lt;/h2&gt;
&lt;p&gt;目前推荐的系统是 Ubuntu 16.04 LTS 发行版，但是 17.x（稳定版本的）也可以。Debian 理论上也可以，喜欢折腾的同学可以试着安装看看。&lt;/p&gt;
&lt;h4&gt;1. 制作 U 盘安装盘&lt;/h4&gt;
&lt;h4&gt;2. 安装&lt;/h4&gt;
&lt;p&gt;分区是朋友推荐的最简化的分区方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/ ext4 主分区 100GB （放在硬盘扇区的头上）&lt;/li&gt;
&lt;li&gt;swap 16GB&lt;/li&gt;
&lt;li&gt;/home ext4 主分区 剩下的硬盘空间全部放这个，不分 /usr 等其他分区了&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;0x02 安装相关支持软件和 GPU 驱动&lt;/h2&gt;
&lt;h4&gt;1. 支持性软件的安装&lt;/h4&gt;
&lt;h5&gt;a. ShadowSocks 安装和配置&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;Linux 下使用 qt5 版本，&lt;a href="https://github.com/shadowsocks/shadowsocks-qt5/realeases"&gt;去 Github 下载&lt;/a&gt;，可以选择 .AppImage 版本&lt;/li&gt;
&lt;li&gt;进入下载所在的文件夹后，首先给它添加可执行权限：&lt;code&gt;chmod a+x Shadowsocks-Qt5-VERSION-PLATFORM.AppImage&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;可以直接执行这个文件了&lt;/li&gt;
&lt;li&gt;给浏览器增加代理插件，比如 SwitchyOmega 等。各种配置都不再详细阐述&lt;/li&gt;
&lt;/ol&gt;
&lt;h5&gt;b. 安装 git&lt;/h5&gt;
&lt;p&gt;按照&lt;a href="https://git-scm.com/download/linux"&gt;官网的安装指示&lt;/a&gt;安装。由于我的系统用的是 LTS 版本，所以按照稳定版的 Git 安装。&lt;/p&gt;
&lt;h5&gt;c. 编辑器安装（atom）&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;官网下载 .deb 的安装包&lt;/li&gt;
&lt;li&gt;到下载的目录下，执行：&lt;code&gt;sudo dpkg -i atom-VERSION.deb&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h5&gt;d. 安装 CUDA Toolkit 9.0&lt;/h5&gt;
&lt;p&gt;按照&lt;a href="https://gist.github.com/zhanwenchen/e520767a409325d9961072f666815bb8"&gt;这个英文教程&lt;/a&gt;安装&lt;/p&gt;
&lt;p&gt;需要注意的是，我们需要安装的是 9.0 版本，而不是最新的 9.1 版本（也许 9.1 版本也可以用，但是安装 9.1 时，不应该再按照上述英文教程安装 384 的驱动，而应该安装 9.1 适配的 387 版本。这个有兴趣的同学可以自行探索，我之后有时间也会折腾一下试试。）&lt;/p&gt;
&lt;p&gt;这里有几个问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;勘误：文中安装驱动时的指令 &lt;code&gt;sudo apt-get nvidia-384 nvidia-modprobe&lt;/code&gt; 应为 &lt;code&gt;sudo apt-get install nvidia-384 nvidia-modprobe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;CUDA Toolkit 9.0 的下载地址是 &lt;a href="https://developer.nvidia.com/cuda-90-download-archive?target_os=Linux"&gt;https://developer.nvidia.com/cuda-90-download-archive?target_os=Linux&lt;/a&gt;。安装按照 NVIDIA 官网上的安装指令操作。安装时，在询问是否要安装 driver 的时候，选择否（n）。其他安装问题和路径问题都选择是（y）即可。&lt;/li&gt;
&lt;/ol&gt;
&lt;h5&gt;e. 安装 NVIDIA 的 cuDNN&lt;/h5&gt;
&lt;p&gt;cuDNN 下载地址是：&lt;a href="http://developer.nvidia.com/rdp/cudnn-download"&gt;http://developer.nvidia.com/rdp/cudnn-download&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;首选需要注册一个 NVIDIA developer membership，登录以后，在下载时选择适配 CUDA Toolkit 版本的 cuDNN 版本，安装即可&lt;/p&gt;
&lt;h2&gt;0x03 安装 Python 和相关的机器学习库&lt;/h2&gt;
&lt;h4&gt;1. 我们使用 Python3&lt;/h4&gt;
&lt;p&gt;Ubuntu 16.04 LTS 自带的 Python3 版本是 Python3.5.x，我之前安装了python 3.6，反而会让系统很多依赖 Python 的指令直接崩溃（特别是 Terminal 啊啊啊啊啊啊啊好坑）。所以我们暂时不要动，保持 Python 3.5 版本。当然如果喜欢折腾，完全可以一点点攻克这个问题，但是我们的目标是快速地搭建出展出需要的稳定环境（或者学习）所以就暂时先不管了。&lt;/p&gt;
&lt;h4&gt;2. 安装 pip&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;首先安装 curl：&lt;code&gt;sudo apt-get install curl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;然后就可以按照官方参考说明上的安装指导进行安装了：&lt;a href="https://pip.pypa.io/en/stable/installing/"&gt;https://pip.pypa.io/en/stable/installing/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;注意，如果你的系统默认 Python 是 2.x版本的，执行命令时候要用 Python3，而且记得执行时候的系统权限&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;3. 安装机器学习艺术相关的各种 Python 库&lt;/h4&gt;
&lt;p&gt;我们这次安装了以下几个库：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://genekogan.com"&gt;Gene Kogan&lt;/a&gt; 的“风格转移”作品&lt;/p&gt;
&lt;p&gt;&lt;img alt="Style Transfer" src="/images/ai/ml_cubist_expressionist_impressionist.jpg"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Opencv-Python: &lt;code&gt;pip install opencv-python&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Chainer: &lt;code&gt;pip install chainer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Cupy: 如果 pip 版本比较老了，首先升级一下 &lt;code&gt;pip install -U setuptools pip&lt;/code&gt; 然后再安装&lt;strong&gt;与 CUDA Toolkit 对应版本&lt;/strong&gt;的 cupy 库（我的CUDA Toolkit 是 9.0，所以是 cuda-90）：&lt;code&gt;pip install cupy-cuda90&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://genekogan.com"&gt;Gene Kogan&lt;/a&gt; 的“肉木偶”作品&lt;/p&gt;
&lt;p&gt;&lt;img alt="Meat Puppet" src="/images/ai/meat-puppet.jpg"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Opencv-Python: &lt;code&gt;pip install opencv-python&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Tensorflow: &lt;code&gt;pip install tensorflow-gpu&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;dlib: 首先要安装 cmake：&lt;code&gt;pip install cmake&lt;/code&gt;，然后安装 dlib 库：&lt;code&gt;pip install dlib&lt;/code&gt;（如果失败了，可以去 &lt;a href="https://github.com/davisking/dlib"&gt;dlib 的 Github 库&lt;/a&gt;上面 clone，然后按照它的说明 build 安装）&lt;/li&gt;
&lt;li&gt;Pyqtgraph: &lt;code&gt;pip install pyqtgraph&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;0x04 测试&lt;/h2&gt;
&lt;h4&gt;1. 环境测试&lt;/h4&gt;
&lt;p&gt;运行一下 Python3，导入几个库试试，如果出现任何问题就 OK：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://genekogan.com"&gt;Gene Kogan&lt;/a&gt; 的“风格转移”作品&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;import chainer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;from chainer import cuda, Variable, serializers&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;import cv2&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://genekogan.com"&gt;Gene Kogan&lt;/a&gt; 的“肉木偶”作品&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;import tensorflow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;import cv2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;import dlib&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;2. 运行代码&lt;/h4&gt;
&lt;p&gt;一般上面安装测试通过了，你的环境就已经搭建成功了！如果你有代码，也可以运行试试。&lt;/p&gt;
&lt;h2&gt;0x05 其他安装&lt;/h2&gt;
&lt;h3&gt;摄像头&lt;/h3&gt;
&lt;p&gt;一般直接插上就可以用了。如果没有，可以用 &lt;code&gt;lsusb&lt;/code&gt; 指令看一下 USB 上的情况&lt;/p&gt;
&lt;h2&gt;0x06 安装中遇到的各种坑爹问题&lt;/h2&gt;
&lt;p&gt;一口气配了 5 台电脑，中间各个电脑遇到的问题层出不穷，同样的配置和硬件竟然还遇到不同的问题（当然我觉得完全可能是电脑店装机的人装了什么蜜汁盗版 Windows 的原因【微笑】）&lt;/p&gt;
&lt;p&gt;但是这些问题完全可以靠 Google 解决！这里记录一下可能遇到的问题，以及解决办法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;由于安装了 CUDA Toolkit 9.1 导致的一些问题，需要卸载删除 9.1 版本，再按照指示重新安装 9.0 版本。&lt;/li&gt;
&lt;li&gt;安装 dlib 库之前，必须要有 cmake，否则会安装失败。&lt;/li&gt;
&lt;li&gt;dlib 安装可以&lt;a href="https://github.com/davisking/dlib"&gt;到这里&lt;/a&gt;，安装完 C++ 库以后，还要接着按照 Readme.md 上面的“Compiling dlib Python API”继续。&lt;/li&gt;
&lt;li&gt;已经安装好了 cmake，但是在 dlib 安装时仍然出现了 “Python.h: no such file or directory” 的话，需要先安装 python-dev。如果使用的是 Python 3.5，就执行 &lt;code&gt;sudo apt-get install python3-dev&lt;/code&gt;；如果使用的是 Python 3.6，则需要执行 &lt;code&gt;sudo apt-get install python3.6-dev&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;cupy 库需要指定 CUDA 的版本安装，否则会安装失败。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;0x07 补充资料&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/zhanwenchen/e520767a409325d9961072f666815bb8"&gt;如何在 UBUNTU 16.04 LTS 上安装 NVIDIA 驱动和 CUDA 9.0&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="机器学习"></category><category term="Machine Learning"></category><category term="人工智能"></category></entry><entry><title>Max/MSP 中的打包操作</title><link href="/how-to-encapsulate-in-max-msp.html" rel="alternate"></link><published>2018-05-05T23:34:00+00:00</published><updated>2018-08-05T22:58:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2018-05-05:/how-to-encapsulate-in-max-msp.html</id><summary type="html">&lt;p&gt;最害怕庞大的 Max 文件了。要是有个哆啦A梦的口袋就好了。&lt;/p&gt;</summary><content type="html">&lt;h2&gt;0x00 随手打包：使用 patcher 对象进行打包&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;使用对象：&lt;code&gt;patcher&lt;/code&gt;（简称 &lt;code&gt;p&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;其他使用的对象：&lt;code&gt;inlet&lt;/code&gt; 和 &lt;code&gt;outlet&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;具体使用方法：新建 patcher 对象，并且在新弹出的窗口中创建自己的模块化逻辑。使用 inlet 作为输入的代替；outlet 作为输出的代替。或者选中要打包的对象，按 &lt;code&gt;CMD/Control&lt;/code&gt; + &lt;code&gt;SHIFT&lt;/code&gt; + &lt;code&gt;E&lt;/code&gt; 快捷键，快速新建并打包好一个 patcher. &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;0x01 多次复用：抽象操作（Abstraction）&lt;/h2&gt;
&lt;p&gt;上述 subpatcher 方法虽然简单，但是不太方便复用。Max/MSP 中还有另一个方法可以重新实现这一点，这个方法叫做——抽象操作（abstraction）。&lt;/p&gt;
&lt;p&gt;创建一个 abstraction 其实酒是新建一个 patcher 并保存在另一个独立的文件中（须要在 Max 定义的文件路径中）。然后你就可以像新建一个对象一样，可以直接写它的名字进行使用。&lt;/p&gt;
&lt;p&gt;在 abstraction 的 patcher 中加入 &lt;code&gt;#1&lt;/code&gt;、&lt;code&gt;#2&lt;/code&gt; 这类占位符，代表它的参数，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt="Abstraction 的用法及参数的使用" src="/images/maxmsp/create-abstraction.png"&gt;&lt;/p&gt;
&lt;h2&gt;0x02 白盒打包：&lt;code&gt;bpatcher&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;以上两种方法在使用时，在不打开包文件的时候是看不到包内各种数据的变化，只能看到输入对输出结果的影响——所谓的“黑盒”操作。但是如果我们想要看到包内的各种对象是怎么变化的呢？这时我们就需要 &lt;code&gt;bpatcher&lt;/code&gt; 对象。&lt;/p&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;新建一个文件，把你想要的对象、inlet、outlet 全放进去，然后保存为一个 abstraction
    &lt;img alt="新建一个abstraction" src="/images/maxmsp/create-bpatcher-1.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在主文件中，新建一个 bpatcher 对象。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选择这个 bpatcher 对象，并打开检视器，在监视器中的 &lt;code&gt;Fatcher File&lt;/code&gt; 中选择刚才你保存的 abstraction
    &lt;img alt="新建 bpatcher" src="/images/maxmsp/create-bpatcher-2.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;搞掂！随心所欲的用吧。
    &lt;img alt="可以看到 UI 的哦" src="/images/maxmsp/create-bpatcher-3.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;0x03 快速创建：小片段 &lt;code&gt;Snippet&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;其实这个并不是打包（encapsulation）操作！只是一种快速创建和复用的操作。如果你创建了一些对象的组合，你觉得还不错，以后会经常用到，你可以把他们保存成为“&lt;code&gt;snippet&lt;/code&gt;”，见 Max 界面最右边的曲别针型按钮。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Snippets" src="/images/maxmsp/snippets.png"&gt;&lt;/p&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选中你需要保存的组合&lt;/li&gt;
&lt;li&gt;鼠标右键单击，在弹出的菜单中选择“&lt;code&gt;Save Snippet&lt;/code&gt;”，在下方出现的文本框中为片段命名&lt;/li&gt;
&lt;li&gt;以后你想使用这个片段时，点击软件右边的 Snippets 按钮并选择你之前创建的片段，就可以快速创建了&lt;/li&gt;
&lt;/ol&gt;</content><category term="Max/MSP/Jitter"></category><category term="Max"></category><category term="创意编程"></category><category term="Creative Coding"></category></entry><entry><title>浅谈 Max/MSP 中 message 的用途</title><link href="/the-usage-of-message-in-max-msp.html" rel="alternate"></link><published>2018-05-05T15:16:00+00:00</published><updated>2018-05-08T18:37:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2018-05-05:/the-usage-of-message-in-max-msp.html</id><summary type="html">&lt;p&gt;MAX/MSP 中的 message（信息）是最让人迷惑的一个对象（或者不应该称为对象），我们经常能够看到它扮演着不同角色出现在各种操作中。是时候总结一下它的用法了。&lt;/p&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;message box 的功能和用途：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击时生成信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;当一个信息被收到时，生成新的信息&lt;/li&gt;
&lt;li&gt;储存并创建混合类型（文本、数字和列表型）的数据&lt;/li&gt;
&lt;li&gt;展示输入的信息&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用在其他对象上的指令（比如 open message、reset message）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;变量的占位符：&lt;code&gt;$1&lt;/code&gt;、&lt;code&gt;$2&lt;/code&gt; 等&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参数的用法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;append&lt;/code&gt; 和 &lt;code&gt;prepend&lt;/code&gt;，在输入的信息后面或者前面加上特定的信息段&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 message 作为指令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;改变下一个对象的外观，例如：&lt;code&gt;bgcolor 0.1 0. 0. 1.&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;set&lt;/code&gt; 改变 message box 的值重置，并且&lt;strong&gt;改变时不输出结果&lt;/strong&gt;。因此，使用 &lt;code&gt;set&lt;/code&gt; 可以达到输出不影响对后续对象的效果，如下个例子所示（另外，这个例子如果想要 output，可以在第二个 number box 上加一个 bang）：&lt;/p&gt;
&lt;p&gt;&lt;img alt="两个 number box 后面的 message box 值不变" src="/images/maxmsp/use-set-in-message.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果想要知道某个对象的输入端口可以接收什么指令或 message，按住 &lt;code&gt;Control + 鼠标右击&lt;/code&gt;，即可弹出这个端口接收的指令。&lt;/p&gt;
&lt;p&gt;&lt;img alt="查看接收指令" src="/images/maxmsp/see-inlet-message-list.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="Max/MSP/Jitter"></category><category term="Max"></category><category term="创意编程"></category></entry><entry><title>巧用 Max/MSP 的 trigger 对象，让 cold inlet 实现立即输出</title><link href="/print-cold-inlet-immediately-with-trigger-object-in-max-msp.html" rel="alternate"></link><published>2018-04-13T17:08:00+00:00</published><updated>2018-04-13T17:08:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2018-04-13:/print-cold-inlet-immediately-with-trigger-object-in-max-msp.html</id><summary type="html">&lt;p&gt;MAX/MSP 中的 cold inlet 输入端仅可以改变对象中存储的参数值，而不会立刻输出。使用 trigger 对象可以实现让 cold inlet 改变后立即输出。&lt;/p&gt;</summary><content type="html">&lt;p&gt;Max/MSP 中，一个对象通常拥有两种不同的输入端—— hot inlet（鼠标悬浮时红色的输入端口）和 cold inlet（鼠标悬浮时蓝色的输入端口）. 在 hot inlet 不改变的情况下，cold inlet 不论如何改变参数，都只是保存在这个对象中而不会输出结果，等到 hot inlet 改变时，cold inlet 的改动才会一并输出。&lt;/p&gt;
&lt;p&gt;典型的例子就是加减乘除的运算符对象：&lt;/p&gt;
&lt;p&gt;&lt;img alt="案例1" src="/images/maxmsp/cold-inlet-01.png"&gt;&lt;/p&gt;
&lt;p&gt;此例子中，不管右边的 number box 中数值如何变化，左边的数值不变，最后的结果仍然不变。只有当左边的变化时，整个结果的才会变化：&lt;/p&gt;
&lt;p&gt;&lt;img alt="案例1-结果" src="/images/maxmsp/cold-inlet-02.png"&gt;&lt;/p&gt;
&lt;p&gt;这时，有的人会产生这样的问题——&lt;strong&gt;如果我想改变右边 cold inlet 的输入并立刻让它输出结果，这时需要怎么做？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这时，&lt;strong&gt;我们可以使用 &lt;code&gt;trigger&lt;/code&gt; 对象来解决这个问题&lt;/strong&gt;。用上文中的案例来说明用法，我们将 &lt;code&gt;trigger&lt;/code&gt; 对象这样加入到 cold inlet 输入之前：&lt;/p&gt;
&lt;p&gt;&lt;img alt="案例1-使用trigger改进" src="/images/maxmsp/cold-inlet-03.png"&gt;&lt;/p&gt;
&lt;p&gt;这里我们在 trigger 中同时激发了两个数值：bang 和整形数值 i。效果相当于在改变右边的 number box 时，为右边的 cold inlet 输入了一个整形数值（i）、之后马上为左边的 hot inlet 输入了一个bang，因此右边 number box 的改动可以立刻输出。&lt;/p&gt;
&lt;p&gt;要注意：这里的 bang 不要加在 i 右边，因为 Max/MSP 中执行顺序是从右至左，所以我们一定要让 bang 在 cold inlet 输入完之后再触发 hot inlet。&lt;/p&gt;</content><category term="Max/MSP/Jitter"></category><category term="Max"></category><category term="创意编程"></category><category term="技巧"></category><category term="tips"></category></entry><entry><title>如何缩放比屏幕尺寸大的 Processing 草图</title><link href="/how-to-resize-a-large-sketch.html" rel="alternate"></link><published>2018-03-26T14:50:00+00:00</published><updated>2018-03-26T14:50:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2018-03-26:/how-to-resize-a-large-sketch.html</id><summary type="html">&lt;p&gt;常遇到的一个问题：如果我们的 sketch 尺寸比自己电脑屏幕的尺寸还大，如何才能让草图完整地显示在屏幕上呢？&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Q：&lt;/h2&gt;
&lt;p&gt;如果 size() 方法设置的尺寸比电脑分辨率大，怎么才能看到屏幕以外的部分呢？&lt;/p&gt;
&lt;h2&gt;A：&lt;/h2&gt;
&lt;p&gt;Processing 虽然有一个 Presentation Mode，但是实际上它没有自己缩放的功能。所以说，我们只能靠自己在绘图过程中进行缩放。&lt;/p&gt;
&lt;p&gt;目前可以想到的方法有以下两种：&lt;/p&gt;
&lt;h3&gt;0x00 一种方法是使用 &lt;code&gt;scale()&lt;/code&gt; 函数&lt;/h3&gt;
&lt;p&gt;需要在 draw() 函数里面第一行就加上 &lt;code&gt;scale()&lt;/code&gt; 方法。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;具体使用方法见 &lt;a href="https://www.processing.org/reference/scale_.html"&gt;scale() reference&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;0x01 另一种方法是使用 &lt;code&gt;PGraphics&lt;/code&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;绘图时，新建一个 &lt;code&gt;PGraphics&lt;/code&gt; 图层&lt;/li&gt;
&lt;li&gt;将所有图形按照你需要的原始尺寸绘制在这个图层上（使用方法：&lt;a href="https://www.processing.org/reference/PGraphics.html"&gt;PGraphics reference&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;最后使用 &lt;code&gt;PGraphics&lt;/code&gt; 对象的 &lt;code&gt;image(pgraphic, 0, 0, your_width, your_height)&lt;/code&gt; 方法把图像缩放为你屏幕的大小。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;一个示例&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;没有缩放的代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;void setup() {
    size(2000, 1000); // 创建一个2000x1000的草图
}

void draw() {
    fill(255);
    noStroke();
    rect(500, 100, 1000, 500);
    fill(0);
    rect(0, 200, width, 100);
    noFill();
    strokeWeight(2);
    stroke(255,0,0);
    rect(0, 0, width, height);
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;由于我的屏幕分辨率是1280x800，运行后显示不全：&lt;/p&gt;
&lt;p&gt;&lt;img alt="显示不全的草图" src="/images/resize-sketch/broken.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;按照第一种方法修改：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;void setup() {
  size(2000, 1000); // 创建一个2000x1000的草图
}

void draw() {
  scale(1280/2000.0); // 因为我的屏幕分辨率是1280x800，所以除一下得到比例数值

  fill(255);
  noStroke();
  rect(500, 100, 1000, 500);
  fill(0);
  rect(0, 200, width, 100);
  noFill();
  strokeWeight(2);
  stroke(255,0,0);
  rect(0, 0, width, height);
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;窗口依然是2000x1000，但是图像缩小到1280宽度了：&lt;/p&gt;
&lt;p&gt;&lt;img alt="scale 函数效果" src="/images/resize-sketch/scale.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;按照第二种方法修改：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;PGraphics graphic;  // 新建一个PG图层

void setup() {
  fullScreen(); // 创建一个全屏的草图，相当于：size(你屏幕宽度, 你屏幕高度)
  graphic = createGraphics(2000, 1000); // 你需要的尺寸的图层
}

void draw() {
  graphic.beginDraw();

  graphic.fill(255);
  graphic.noStroke();
  graphic.rect(500, 100, 1000, 500);
  graphic.fill(0);
  graphic.rect(0, 200, graphic.width, 100);
  graphic.noFill();
  graphic.strokeWeight(2);
  graphic.stroke(255,0,0);
  graphic.rect(0, 0, graphic.width, graphic.height);

  graphic.endDraw();

  image(graphic, 0, 0, 1280, 640);  // 我的屏幕分辨率是1280x800，所以将2000x1000的草图等比例缩放到1280x640，你可以根据你的需要更改这两个参数
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt="PGraphics 效果" src="/images/resize-sketch/pg.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;最后总结：这两种方法都是直接把图像缩小，而不只是缩放预览效果，只能用来临时看图像的效果，无论哪种都比较低效，所以建议还是尽量避免这种情况的发生。&lt;/p&gt;</content><category term="Processing"></category><category term="分辨率"></category></entry><entry><title>如何在 Processing 3 上使用 SimpleOpenNI 库</title><link href="/how-to-use-simpleopenni-on-Processing-3.html" rel="alternate"></link><published>2018-03-23T10:45:00+00:00</published><updated>2018-03-23T10:45:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2018-03-23:/how-to-use-simpleopenni-on-Processing-3.html</id><summary type="html">&lt;p&gt;SimpleOpenNI 已经很久没有更新了，原来的开发者也不再提供 SimpleOpenNI 对 Processing 3.x 的支持。但是业界始终有人在使用 Kinect 探测人体骨骼。今天来聊聊如何（非常勉强地）在 Processing 3 上使用 SimpleOpenNI 库进行开发。&lt;/p&gt;</summary><content type="html">&lt;p&gt;由于 OpenNI 被万恶的 Apple 公司收购，做了一个 iPhone X 出来，其他人再也无法把玩 OpenNI，所以基于 OpenNI 库开发的 Processing 库 SimpleOpenNI 也无法再继续更新，因此也就无法再支持新版 Processing 开发。我们这些仰赖开源库的 Creative Coders 如果想要使用 Kinect 进行人体骨骼的探测就比较蛋疼了。我觉得有必要写一篇文章来讨论一下 2018 年的今天，如何在 Processing 上使用 SimpleOpenNI 库。&lt;/p&gt;
&lt;p&gt;这里有两种方法：&lt;/p&gt;
&lt;h2&gt;0x00 使用低版本的 Processing 和 旧版 SimpleOpenNI 库&lt;/h2&gt;
&lt;p&gt;具体配置如下：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Processing 2.2.1&lt;/code&gt; + &lt;code&gt;SimpleOpenNI-0.27&lt;/code&gt; + &lt;code&gt;Kinect 一代&lt;/code&gt; + &lt;code&gt;OpenNI_NITE_Installer-win64-0.27（假如你使用 Windows 系统）&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;SimpleOpenNI-0.27 和 OpenNI_NITE_Installer 的官方下载地址：&lt;a href="https://code.google.com/archive/p/simple-openni/downloads"&gt;SimpleOpenNI 的 Google Code 下载列表（需翻墙）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Google Code 下载列表" src="/images/simpleopenni/google-code.png"&gt;&lt;/p&gt;
&lt;p&gt;具体的安装和使用方法，很多市面上的书（例如《格物致知》）里面已经写的很清楚，这里不再多重复。&lt;/p&gt;
&lt;h2&gt;0x01 使用目前最新版的 Processing 3.3.6/3.3.7 和其他开发者专门适配的 SimpleOpenNI for Processing 3 库&lt;/h2&gt;
&lt;p&gt;网上有其他开发者为适配 Processing 3 在原来开源的 SimpleOpenNI 基础上开发了一套 SimpleOpenNI for Processing 3. 项目页面见此处：&lt;a href="https://totovr.github.io/SimpleOpenni/"&gt;totovr/SimpleOpenni&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;下载库：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;方法一：在 Github 项目页面中下载对应你 Processing 版本的分支上的内容（如果你用 Processing 3.3.6/3.3.7，选择 &lt;code&gt;Processing_3.3.6&lt;/code&gt; 分支；如果你用 Processing 2.2.1，选择 &lt;code&gt;Processing_2.2.1&lt;/code&gt; 分支）；&lt;/p&gt;
&lt;p&gt;&lt;img alt="选择对应分支下载" src="/images/simpleopenni/branch.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果你访问 Github 有问题或者还是不清楚怎么下载，也可以&lt;strong&gt;使用我共享的文件：&lt;a href="https://pan.baidu.com/s/1hOp4iyyIvOpBZRIAZSTWdw"&gt;SimpleOpenNI 百度网盘下载地址&lt;/a&gt;，密码:ur33&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下载以后解压，你可以看到里面有一个 &lt;code&gt;SimpleOpenNI&lt;/code&gt; 的文件夹。将这个文件夹拷贝到你系统中 Processing 第三方库的文件夹内。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows系统: &lt;code&gt;C:\Users\你的用户名\Documents\Processing\libraries&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Linux: &lt;code&gt;~/sketchbook/libraries&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;OSX: &lt;code&gt;/Users/你的用户名/Documents/Processing/libraries&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="选择对应分支下载" src="/images/simpleopenni/library.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后就可以使用了。下载的压缩包里面还有使用的示例程序供学习和参考，可以直接在 Processing 菜单里的 &lt;code&gt;文件&lt;/code&gt; --&amp;gt; &lt;code&gt;范例程序&lt;/code&gt; 中找到。&lt;/p&gt;
&lt;p&gt;&lt;img alt="范例程序" src="/images/simpleopenni/examples.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最终效果：&lt;/p&gt;
&lt;p&gt;&lt;img alt="效果图" src="/images/simpleopenni/final.png"&gt;&lt;/p&gt;</content><category term="Processing"></category><category term="Creative Coding"></category><category term="Kinect"></category><category term="SimpleOpenNI"></category><category term="OpenNI"></category></entry><entry><title>几何算法之判断点是否在多边形内</title><link href="/geometric-algorithm-if-a-point-is-inside-of-a-polygon.html" rel="alternate"></link><published>2018-03-12T17:19:00+00:00</published><updated>2018-03-12T17:19:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2018-03-12:/geometric-algorithm-if-a-point-is-inside-of-a-polygon.html</id><summary type="html">&lt;p&gt;几何算法系列文章，总结一下判断某个点是否在多边形内的算法&lt;/p&gt;</summary><content type="html">&lt;p&gt;这是一道经典的算法题。以前我没有用到过，但是在做创意编程甚至是图像处理的时候，我就经常会遇到这个问题。&lt;/p&gt;
&lt;h1&gt;0x00 相交数方法（Crossing Number - CN）&lt;/h1&gt;
&lt;p&gt;总体来说，就是从该点上发射一个射线，如果射线和多边形的边有奇数条相交，那么就是在多边形内部；偶数则为内部。&lt;/p&gt;
&lt;p&gt;&lt;img alt="算法示意图" src="/images/algorithm/point-to-polygon.png"&gt;&lt;/p&gt;
&lt;p&gt;具体的算法步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;从该点向右水平（或者任何一个你喜欢的方向）画一条无限延长的线（即射线）&lt;/li&gt;
&lt;li&gt;数一数这条射线和多边形边的相交数量&lt;/li&gt;
&lt;li&gt;如果是奇数，说明点在多边形内部；如果是偶数，说明点在多边形外部&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;这里还需要判断一下特例情况，就是假如这条射线与多边形某个边在同一条直线上的情况：&lt;/strong&gt;&lt;ol&gt;
&lt;li&gt;首先，判断出他们共线&lt;/li&gt;
&lt;li&gt;其次，判断这个点是否在这条边的线段中，如果在线段外，则返回否（至于点如果在边上算不算在多边形内，则需要根据你的需要来判断了，具体请见参考 3）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这个算法的复杂度是 &lt;code&gt;O(n)&lt;/code&gt;，n 为多边形的顶点数。&lt;/p&gt;
&lt;p&gt;使用 Processing 实现这个算法，代码如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//稍后补充&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;draw&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;另：判断两条线段是否相交的方法，一般判断方向是否相同。后续文章我会再做出解释。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;0x01 环绕数方法（Winding Number - WN）&lt;/h1&gt;
&lt;p&gt;总体来说，就是计算多边形环绕该点的次数。当环绕数（wn）为 0 时，该点在多边形之外；否则就在内部。&lt;/p&gt;
&lt;p&gt;&lt;img alt="复杂多边形使用环绕数方法更精确" src="/images/algorithm/point-to-polygon-wn.png"&gt;&lt;/p&gt;
&lt;p&gt;这个方法在面对非简单多边形、以及距离多边形极近的点时更精确。但是一般说来，时间复杂度更高。&lt;/p&gt;
&lt;h1&gt;0x02 不是算法的算法（强硬地 hack 一下）&lt;/h1&gt;
&lt;p&gt;这个方法我暂时还没有在 Processing 中尝试过，但是算是一种思路，先放在这里。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;新建一个在屏幕之外的画布（Processing 中可以使用 &lt;code&gt;pushMatrix()&lt;/code&gt;, &lt;code&gt;translate()&lt;/code&gt;, &lt;code&gt;popMatrix()&lt;/code&gt; 这一组方法来将其和现实坐标对应起来）&lt;/li&gt;
&lt;li&gt;在这个画布上，先给背景画上一种颜色（比如黑色），然后用另一种颜色（比如白色）画多边形&lt;/li&gt;
&lt;li&gt;取该点在这个画布上的颜色，根据颜色判断是在内部还是外部&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;😂😂😂 是不是很巧妙……嗯？🤪🤪🤪&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个方法让我突然觉得，其实在做创意编程的时候，很多时候没必要循规蹈矩非要用传统算法去做。这大概就是设计师和程序员思路的不同吧&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注：这个方法在画布不大的时候以及可以使用 GPU 加速的时候好用&lt;/p&gt;
&lt;h1&gt;0x03 参考资料&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://www.dcs.gla.ac.uk/~pat/52233/slides/Geometry1x1.pdf"&gt;GEOMETRIC ALGORITHMS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/217578/how-can-i-determine-whether-a-2d-point-is-within-a-polygon"&gt;How can I determine whether a 2D Point is within a Polygon?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://geomalgorithms.com/a03-_inclusion.html"&gt;Inclusion of a Point in a Polygon&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="算法"></category><category term="几何"></category><category term="数学"></category></entry><entry><title>Processing IDE (PDE) 使用技巧</title><link href="/Processing-IDE-tips.html" rel="alternate"></link><published>2018-03-11T11:57:00+00:00</published><updated>2018-03-11T11:57:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2018-03-11:/Processing-IDE-tips.html</id><summary type="html">&lt;p&gt;总结 Processing 官方编辑器（PDE）的一些使用技巧&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;本文将持续更新&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;最近一直在写 Processing 的程序，并且给别人做教学答疑。用了 Processing 官方的 IDE（官方叫 PDE）感觉非常难用，虽然也可以导入 Eclipse 或者 IntelliJ IDEA 进行开发，但是想快速的画出一个 sketch 还是官方的方法最简便。于是抽时间总结各方资料，统计一下目前 PDE 的一些使用技巧作为参考。&lt;/p&gt;
&lt;h1&gt;0x00 快捷键&lt;/h1&gt;
&lt;p&gt;本文将以 OSX 平台为示例，Windows 系统可以尝试将 &lt;code&gt;CMD&lt;/code&gt; 换成 &lt;code&gt;Ctrl&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运行程序：&lt;code&gt;CMD + R&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;展示模式运行程序（全屏运行程序，草图在屏幕正中央）：&lt;code&gt;CMD + shift + R&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;快速把一行代码变为注释：&lt;code&gt;CMD + /&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="comment keyboard shortcut" src="/images/processing-IDE-tips/shortcut-comment.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;代码自动补全：在偏好设置中将代码补全功能打开，然后用 &lt;code&gt;Control + 空格&lt;/code&gt; 就可以了。(&lt;em&gt;假如使用 Mac 的话，一般这个快捷键会被绑定在 Spotlight 上，这时在系统设置里面把 Spotlight 的快捷键换一个就可以了。&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;&lt;img alt="completion keyboard shortcut" src="/images/processing-IDE-tips/shortcut-completion.png"&gt;
&lt;img alt="completion keyboard shortcut" src="/images/processing-IDE-tips/shortcut-completion-2.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;快速格式化：&lt;code&gt;CMD + T&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;快速查找一个函数的参考文档（使用方法）：选中函数名后，按 &lt;code&gt;CMD + shift + F&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="look up reference" src="/images/processing-IDE-tips/shortcut-ref.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;0x01 调试技巧&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Tweak模式：&lt;code&gt;CMD + SHIFT + T&lt;/code&gt; (这是一个非常有用的调试模式，可以在运行中可视化的改变颜色、变量大小等参数，这样你可以即时看到自己草图的效果，不需要每次都费时地调整代码、重新运行)&lt;/p&gt;
&lt;p&gt;&lt;img alt="tweak 01" src="/images/processing-IDE-tips/shortcut-tweak01.png"&gt;
&lt;img alt="tweak 02" src="/images/processing-IDE-tips/shortcut-tweak02.png"&gt;
&lt;img alt="tweak 03" src="/images/processing-IDE-tips/shortcut-tweak03.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;0x02 拓展工具&lt;/h1&gt;
&lt;p&gt;打开菜单中的“工具”，可以看到很多工具，并且可以通过最后一项的“添加工具…“来添加更多实用工具。&lt;/p&gt;
&lt;p&gt;&lt;img alt="comment keyboard shortcut" src="/images/processing-IDE-tips/tool-menu.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;添加中文支持&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;先在 &lt;code&gt;Processing&lt;/code&gt; -&amp;gt; &lt;code&gt;偏好设置…&lt;/code&gt; 里，重新选择一个支持中文的字体&lt;/li&gt;
&lt;li&gt;并勾选偏好设置的“启用复杂字体输入”&lt;/li&gt;
&lt;li&gt;重启 PDE&lt;/li&gt;
&lt;li&gt;可以看到已经可以支持中文了&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="support Chinese" src="/images/processing-IDE-tips/support-chinese.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Processing"></category><category term="PDE"></category><category term="Creative Coding"></category><category term="创意编程"></category><category term="技巧"></category></entry><entry><title>如何自学 Max/MSP/Jitter</title><link href="/how-to-learn-max-msp-jitter.html" rel="alternate"></link><published>2018-01-11T15:40:00+00:00</published><updated>2018-01-11T15:40:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2018-01-11:/how-to-learn-max-msp-jitter.html</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;首先，你需要先明白自己学习 Max/MSP/Jitter 的目的是什么？是做交互装置、还是视觉设计，抑或是实验音乐作曲甚至其他的目标？&lt;/p&gt;
&lt;p&gt;Max 是专门为制作交互艺术项目的可视化编程（patching）类软件。它的功能非常强大，既可以为互动视觉设计服务，也可以为互动音乐的制作而服务。Max 软件本身有基础的图形和影像处理能力；而 MSP 是 Max 的一个拓展包，专门；另外还有一个更加高级的视觉处理拓展包 Jitter。所以你可以看到，使用 Max 的人除了交互设计师外，还有专门做 visual-audio 的 VJ们、以及搞实验音乐的大佬。&lt;/p&gt;
&lt;p&gt;所以我建议，你可以先学习软件基础，然后再根据你的不同需要，对这几个拓展包有侧重点的进行学习。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在学习方法上，请多实践！是的，不要只读教程，一定要动手做里面的案例。而且不要死记硬背，多用几次自然就记住了。&lt;/p&gt;
&lt;p&gt;这里转一个台湾人写的学习方法（&lt;a href="http://maxmsp.recorderz.org/2006/10/27/轉subborg-on-max學習方法/"&gt;原文见此&lt;/a&gt;）：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我想一般人對於學習，甚至 …&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;首先，你需要先明白自己学习 Max/MSP/Jitter 的目的是什么？是做交互装置、还是视觉设计，抑或是实验音乐作曲甚至其他的目标？&lt;/p&gt;
&lt;p&gt;Max 是专门为制作交互艺术项目的可视化编程（patching）类软件。它的功能非常强大，既可以为互动视觉设计服务，也可以为互动音乐的制作而服务。Max 软件本身有基础的图形和影像处理能力；而 MSP 是 Max 的一个拓展包，专门；另外还有一个更加高级的视觉处理拓展包 Jitter。所以你可以看到，使用 Max 的人除了交互设计师外，还有专门做 visual-audio 的 VJ们、以及搞实验音乐的大佬。&lt;/p&gt;
&lt;p&gt;所以我建议，你可以先学习软件基础，然后再根据你的不同需要，对这几个拓展包有侧重点的进行学习。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在学习方法上，请多实践！是的，不要只读教程，一定要动手做里面的案例。而且不要死记硬背，多用几次自然就记住了。&lt;/p&gt;
&lt;p&gt;这里转一个台湾人写的学习方法（&lt;a href="http://maxmsp.recorderz.org/2006/10/27/轉subborg-on-max學習方法/"&gt;原文见此&lt;/a&gt;）：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我想一般人對於學習，甚至「教」 max/msp 都有極大的誤會，或說完全錯誤的期望，在此稍微說明一下。電腦程式語言就跟人類的語言完全一樣。學語言雖然要學文法，但不是從文法學起，更不是單學文法。像 max/msp 的手冊甚至 tutorial，其實只是文法書，絕對不是一套創作音樂的教材，不是課程。&lt;/p&gt;
&lt;p&gt;就像我們學說的語言，不能拿文法書來從第一頁讀到最後一頁（是完全無用的），學 max/msp 讀手冊或所謂 tutorial 也是一樣，從第一個 tutorial 作到最後一個，對於一般人會是完全無效的。這是一極其核心的誤解。&lt;/p&gt;
&lt;p&gt;抱著一本德語文法，如何學會寫德文小說？&lt;/p&gt;
&lt;p&gt;不但那樣學過以後會全忘光，不但不會有學習下去的動力，而且即使作完了全部 max tutorial，啃完全部手冊，還是不會作曲。因此，在這些手冊之外，之背後，必需有一套真正的課程，那個課程告訴你，如何用這些文法規則組成句子，寫成散文小說，作出詩來。而那個課程最重要的一部份就是欣賞並且分析別人的經典作品，以及電子原音音樂 electroacoustic 的真正構成原理，美學原理。那個課程中，max/msp 只是最次要的一個技術的部份。&lt;/p&gt;
&lt;p&gt;好，如果那個課程不存在，也沒有課本，那麼該怎麼辦。我的建議是，首先，隨便翻翻讀讀 max 及 msp 的手冊及前幾篇 tutorial，大略熟悉這個語言環境，詞彙，流程，等。然後先想想你要玩的作的是何種音樂，是 midi，是有節奏和聲音階的，是十二音非調性的，還是處理具象聲音採樣的，還是純綷電波脈動的，DSP 的，純噪音的？這時候放下什麼 max/msp 亂七八糟的一切，去找你要學的音樂方面的書或資料來讀（比如具象音樂方法，電子音樂構成，傳統音樂和聲作曲法，十二音作曲法，現代音樂史，等等），更重要的是開始分析你喜歡的作品，去猜想分析別人是怎麼作，用什麼作出來的。如果你想創作音樂，不只是摸摸軟體或硬體的話，這時更重要的是想清楚你想要創作什麼？你的目的／目標／幻想是什麼。換句話說，你想幹嘛？&lt;/p&gt;
&lt;p&gt;然後！回頭打開 max/msp，復習一下以前摸過的基本語法，但不要再按著 tutorial 順序作下去，而專門去找你想作的音樂的那幾部份，以那幾個 function，那幾個範例，那幾個 help file 作起點，然後以旁側的方向去找出所有必要用到的相關語言部份；如此橫向擴大發展，學的懂的越來越多。重點：絕對只學你現在需要用的，不要去學你不需要的一切函數或語法，不要作你不想學的 tutorial。比如說，你想要搞噪音，就去翻索引，找到那幾個與噪音有關的函數，從那兒學起，擴展起，再學 EQ，學 AM 調變，再回頭去聽別人作品，再讀別的資料或書，弄不懂的語法再去查手冊。如此循環下去，終身學習。&lt;/p&gt;
&lt;p&gt;而絕不是從頭開始唸枯燥無味的 tutorial，即使作到最後一課，保證還是不會懂什麼叫電腦音樂，更不會懂怎麼創作聲音藝術或音樂。Max/MSP 可以讓人發出聲音，但不會讓你成為一個創作者／音樂家。&lt;/p&gt;
&lt;p&gt;Max/MSP 只不過是一件工具，很難用很難學的工具，有別的很多簡單方法可以取代，太多 plug-in 也可取代的工具。別存太多幻想。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自学资源和教材（以下按照推荐程度的从高到低排序）：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中文资源：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;台湾“(M之道)[http://maxmsp.recorderz.org/]”的《Max/MSP 中文手册》（貌似是 Max 5，后来这个网站也早就挂了，所以以后也没有更新，但是新版 Max 应该差别不大，就是多了几个库）：网盘地址经常被删，私信我把文件发给你们&lt;/li&gt;
&lt;li&gt;豆瓣 Max 小组：(https://www.douban.com/group/max.msp.jitter/)[https://www.douban.com/group/max.msp.jitter/] （不过最近几年豆瓣已经没落了，除了广告基本上都没人说话了）&lt;/li&gt;
&lt;li&gt;某个台湾实验音乐人的教程：&lt;a href="http://web.thu.edu.tw/cwcheng/www/ComputerMusic.htm"&gt;http://web.thu.edu.tw/cwcheng/www/ComputerMusic.htm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;英文资源：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;官方 Tutorial：如果有时间一定要读！官方的教程永远是最新、最权威的，而且 Max 的教程最好的一点在于，它有着各种示例，在你不会用的时候看看官方示例就立刻会用了。路径为 File -&amp;gt; Show File Browser（或直接按 &lt;code&gt;Cmd + B&lt;/code&gt;），在打开的新窗口中选择 Cycling '74' -&amp;gt; Tutorials&lt;/li&gt;
&lt;li&gt;Cycling '74 上的 Max 官方论坛：&lt;a href="https://cycling74.com/forums/page/1"&gt;https://cycling74.com/forums/page/1&lt;/a&gt; 这是互联网上最大的 Max/MSP 社区，有任何问题基本上都可以在这个论坛上搜索到&lt;/li&gt;
&lt;li&gt;Youtube：Youtube 上有很多教程，搜索关键字即可&lt;/li&gt;
&lt;li&gt;Google：不解释&lt;/li&gt;
&lt;li&gt;其他的在线社区，比如：Facebook 的 Max/MSP group、Google groups 等等……&lt;/li&gt;
&lt;li&gt;书：中文书非常少，英文书倒是有一些，不过书籍一般都相对滞后一些，不过在这里也列出来供大家选择：&lt;ul&gt;
&lt;li&gt;ELECTRONIC MUSIC AND SOUND DESIGN - Theory and Practice with Max and MSP&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;永远要学习好英语！&lt;/p&gt;
&lt;p&gt;不得不承认，虽然 Max 距离开发出来已经有三十多年了，但是在中国，它的使用者仍然是少数，中文资料更是寥寥无几。因此，学好英文、学习。同时，我们也会坚持更新 Max/MSP 小教程、使用技巧等等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;永远不要关起门来一个人学，要和大家多交流，如果有机会找到靠谱的老师，完全可以付费学习。&lt;/p&gt;
&lt;p&gt;现在这个网络发达的社会，虽然一切学习资源都可以在网上找到，但是一个人通常很难突破学习的瓶颈。如果有机会，可以经常参加线下的 workshop 和聚会，拓展自己的眼界。&lt;/p&gt;
&lt;p&gt;另外，一个靠谱的老师可以给你很大的帮助，特别是有实际项目经验的专业人士，会知道很多快捷操作、以及某种效果的特定实现方式。在你不懂的时花费大量时间搜索问题解决方案时，可能请教一个专业人士只需要几分钟时间就可以解决了。这些都是一个人看书看教程自学无法实现的。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="MAX/MSP/Jitter"></category><category term="自学"></category><category term="学习"></category><category term="创意编程"></category><category term="交互设计"></category></entry><entry><title>工作小结与反思——如何做一个更优秀的产品经理</title><link href="/how-to-be-a-better-PM.html" rel="alternate"></link><published>2017-03-07T03:10:00+00:00</published><updated>2017-03-07T03:10:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2017-03-07:/how-to-be-a-better-PM.html</id><summary type="html">&lt;p&gt;工作小结与反思——如何做一个更优秀的产品经理&lt;/p&gt;</summary><content type="html">&lt;p&gt;去年年末，我因为想要在产品道路上更进一步，选择离开携程进入一家创业公司做用户增长。我对自己在携程的工作还算满意，但是其实对这段在创业公司的工作很不满意，不过感觉也学到了很多，有了更多的感悟。刚在新公司入职不久，和以前的 leader 交流时我说过在创业公司做产品经理还挺不一样的，他问我有哪些感想，当时我没有完整的思考过，现在在这里一起写出来，作为一个对过去的反思和对未来的警示，也分享出来给更多看到这篇文章的初级产品经理们作为借鉴。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一个感悟：及时调整工作状态和工作方法很重要。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在刚进入创业公司时，我的第一个感受是——快！名不虚传，的确创业公司的整体节奏比大公司要快得多。最让我印象深刻的是，这里的同事开会和吃饭时，行走、上下楼的速度都比一般人快很多。当然，这里说的快节奏的不仅仅是行为上的，在整个开发迭代中也是很迅速的。&lt;/p&gt;
&lt;p&gt;首先，是产品经理自己本身的工作就要求完成很快，一个需求基本上产品经理最多一两天就要完成所有产品设计。而我的工作方式一直都是想要花更多一点时间深入思考产品，所有展现方式或活动形式都要想一遍再确定，然后就是画很细致的原型。这未免就造成会有点跟不上他们节奏的后果。这点我主动问过产品总监如何做到速度和产品设计合理两者兼得。他的回答是：这一点就是需要产品经理平时积累，思考产品这种工作更多应该放在日常时间，每看到某种产品时，应该多想想产品如何实现的、然后想为什么这样设计规划。积累多了自然看到某个产品时就知道怎么做，不需要太复杂的思考就可以尽快下手。另外如何让产品工作完成得更快的关键是要分清需求的紧急程度和要产品设计到什么程度，避免完美主义作祟。我在这家公司还负责 SEO 方面的优化，这里需要配合第三方专业的 SEO 团队把 web 站改造成适合搜索引擎检索的版本，需要增加大量内容，相当于把现有的 web 站全部推翻做一个新的网站出来。我吭哧吭哧地思考网页上应该放什么内容、画原型。在离开时这个工作交接给另一个产品经理，他只是叫了设计总监和开发经理一起，口头一起决定了有哪些改造，就直接让UED去设计了。这件事如果只是单纯的说“产品经理自己不画原型图直接丢给设计”这一个行为，那么绝对所有互联网行业的 UED 和技术从业者都要义愤填膺，大呼“产品经理又挖坑了！”然而实际上，这件事在考虑当时的背景下，这样做是可以接受的——一方面，我们主要的产品还是基于 app 端，web 纯粹只是为了做 SEO，所以 web 设计样式好不好看、甚至用户体验始终都是次要的、可以慢慢迭代优化的小问题，关键还是在于内容要全，让搜索引擎可以覆盖到；另一方面，公司花了很多钱在 SEO 服务上，无论是出于免责也好、尽快实现预期目标也罢，自然需要我们内部尽快的把改造好的网站交给对方——因此，首要目标应当是：确定有哪些内容了，不管如何赶快上线一版。这里我其实有这个意识，但是显然还是对自己绷得太紧、对“产品经理”真正的职责认识的不够全面，没有更放松地去执行这个意识。&lt;/p&gt;
&lt;p&gt;那么这里这个所谓的“产品经理的真正指责”是什么？我认为，并不是画原型、做好产品设计就是合格的产品经理了。产品经理的真正任务在于“管理”，即推动产品周期的高效运转。产品设计固然重要，但同样重要的还是推动能力。关于这一点，在这个公司也发生了一件很有意思的事情：产品总监某天在招聘一个新的产品经理，但是他看到一个面试者的简历上写的自己做的项目时却果断否定了这个面试者。他当时说了一句话很触动我：“这个产品经理两个月还没有做出一个 app，不管是公司问题还是个人问题，都是不合格的产品经理。”想想之前有研发和我吐槽说某个部门两个产品经理两周多还没有出来一个产品原型；以及我刚刚转行做产品经理不久，将近两周才从 UED 那里拿到一个 app 的设计稿，当时我觉得自己实在效率太低很难过，但是同组的同事却很惊讶的说我这个 app 做的很快……还好我在携程时已经有一些主动推进的意识，否则也要变成这样被否定的角色了！这里的推进，其实是个大学问。一般刚做产品经理时，对推进项目的意识可能都只在催促设计和开发、和他们据理力争缩短排期、和其它项目抢夺资源等问题上，然而还有一些未被我们察觉到的问题也需要我们主动关注，例如：和其他部门或公司合作时，对方进度需要时刻跟进、敦促进度反馈；某个项目进度在领导暂时停滞了，也不能坐以待毙，需要我们主动和领导询问、甚至去提建议和共同讨论……这些问题不被初级产品经理重视的原因，很大情况上在于我们会认为这是项目经理 / 领导 / 对方团队等其他人负责的工作，不属于我们的工作范畴。&lt;/p&gt;
&lt;p&gt;小公司速度快。而大公司也有自己特定的不同的环境，比如跨部门协调问题等等。不同环境下，如何高效的完成产品工作，是需要我们尽快摸清公司和团队的风格与节奏，尽快适应和磨合。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第二点是关于产品经理的思维和工作方式，要有框架和结构性。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其实我在携程时，做产品是会想得比较系统和全面的，除了使用者体验外，我会有自己曾经做程序员时的结构化思维，系统争取做到通用、可插拔、解耦。在长远规划上，我也会想产品未来市场怎样、如何才能适合推广等问题。&lt;/p&gt;
&lt;p&gt;但是，当我在新公司最开始做用户增长时，我就比较欠缺完整的产品规划框架了。一开始，我直接罗列出我觉得需要改进的增长点。这时候很有经验的产品总监指出来：你的规划不应该是这样一点一点的，而应该有一个框架，根据这个框架去执行产品新增和优化。接着我们主要参考了国外著名的 AARRR 海盗模型，明确了这五个增长环节中有哪些可以做、应该做的事，同时列出优先级、用时和对应的 KPI（这个项目的目标究竟是激活拉新还是留存，或是分享？预计目标数据分别是多少？），按照这个框架严格执行。这样看来，“用户增长”这个非常模糊的概念就清楚的落实到每一个具体工作和目标中去了。&lt;/p&gt;
&lt;p&gt;同样的，这种框架性思维不仅限在产品规划上。在跟着这个产品总监工作的过程中，我发现他每一次做工作的规划（无论长期还是短期）或汇报，都会有一个非常清楚的纲要。我也慢慢领悟到，产品经理要渐渐总结形成出自己一套的方法论，这样工作才有更高的效率、也更清晰明了。大概这样的思维让我们变得更像一个职业经理人，但是我认为这样也的确可以帮助自己与他人理清思路，明确每一步的做什么、接下来做什么。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第三点感悟，产品经理真的是一个小 CEO。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在诸如《人人都是产品经理》这类书和各个忽悠别人来做产品经理的文章中，基本都提到这样的话：“产品经理就是一个小 CEO”，或给人“产品经理做好了未来可以做 CEO”的感觉。许多人真的做了产品经理以后，发现自己只是在真正的 CEO 们的“压迫”下完成产品的一小块功能，因此开始群起讽刺这种说法。&lt;/p&gt;
&lt;p&gt;我最开始转做产品经理时也有这样的状态。我觉得，这他妈真不是人干的活啊，经常要各种跪舔，还有一堆琐碎的破事，为什么我好好的开发不做跑来做一条狗呢？好歹程序猿还是灵长类动物啊有木有！&lt;/p&gt;
&lt;p&gt;现在做产品经理两三年，我的态度反而渐渐回到了最初的想法——产品经理的确就是一个小 CEO。&lt;/p&gt;
&lt;p&gt;这里并不是说产品经理的话语权有多高，而是身为产品经理，你要对产品的一切负起责任，也要学会主动承担本来不是你的工作。&lt;/p&gt;
&lt;p&gt;职场上，甩锅似乎是必备技能。但是身为产品经理，这个锅并不是随便甩的（当然了人在职场也是要多留意，厚黑学我不太懂，而且也和本文无关就不多说了）。基本上涉及产品的所有环节和流程，无论开发、运营、还是推广，身为产品经理都应该从大局上把控住。&lt;/p&gt;
&lt;p&gt;在大公司，人力资源比较齐备，这种需要产品经理多费心的情况偶尔也会出现但是不多。但是进入创业公司，这种体验就会明显增多。很多时候，许多本应该别人负责的工作因为种种原因被搁置，这时候身为产品经理应当主动顾及。这种主动，有时候是全力推动和督促对方进行下去，有时候对方实在分身乏术、而这是件不怎么涉及结果却很紧要的事时则要主动接手过去。总之，无论是丢给别人做还是自己主动替代完成，都要把它看成自己的职责所在管理起来。&lt;/p&gt;
&lt;p&gt;在我之前的产品总监离职后，新来了一个负责公司的社区产品的总监。当时我们正开始把粗犷的项目管理转为 PMO 制度的尝试。众人都认为使用协同工作一类 Saas 服务来管理效率很高。但是这其中，产品需求汇总到网页上一类琐碎工作，研发没有精力做，这个产品总监就主动承担起这个责任。更让我感到感动的是，她还教研发经理怎样和不懂技术的老板娘汇报工作进度。很多人都对女性产品经理有各种偏见，但是我见到的这个女总监十分负责而且温柔，让我非常自惭形秽。&lt;/p&gt;
&lt;p&gt;其实这类情况，其实身为一个营销方向的产品经理，需要对接的工作比较多、接手的需求比较杂，对比其他类型产品经理我原本遇到的就更多，可是当时在携程不够成熟，没有意识到这点，有时也没有处理好。&lt;/p&gt;
&lt;p&gt;我想，做产品经理，本身也是陪养自己有责任感的一个过程吧。从之前在珠海做开发时同事戏称我做的 BI 系统是“我的儿子”，到今天更加体会到自己对于产品的责任，我感到肩上的份量更重了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第四点并不仅限于产品经理这个职业，那就是：职场中要学会管理上级。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这一点一直是我比较薄弱的地方，我想也应该是大部分技术出身的人薄弱的地方。我认为可能是接触人的机会比较少，还不够了解这个社会和人性所致。&lt;/p&gt;
&lt;p&gt;做技术的人一般喜欢埋头默默做事，并不擅长宣扬自己做了什么。可能也和我们从小受到的教育有关，东亚文化更加鼓励为人谦卑。这也是为什么国外留学生们都在埋怨印度人在职场上没怎么做事却说的很好听，抢走了所有功劳，而自己做了很多事却默默无闻。做事也要学会适当的说出来。其实仔细想想，这也算是“与上级沟通不畅”的问题之一吧！&lt;/p&gt;
&lt;p&gt;还有一些时候，我们认为领导和老板做的决策是错误的，其实我们没有站在领导的角度看问题。我们并不了解领导和老板做决策的初衷是出于什么考虑。而且作为基层员工，很多时候我们无法看到领导和老板们看到的事。&lt;/p&gt;
&lt;p&gt;这方面我还在摸索阶段，没有太多心得，但是我特意寻找过这方面的相关资料，学习到管理上级就是“帮助领导发挥他的长处，帮助他弥补他的不足”。我觉得非常对。我觉得一个好的上级关系永远是老师 + 朋友，你可以在他们身上学到很多。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;其实写完以上这几点感悟，我突然明白过来——这不就都是管理学的学问嘛！虽然我们身为产品经理，没有在做面向人的管理，但是始终也脱离不了管理职位这个本质。学好管理学一定也是很有帮助的！因此我最近在看项目管理和德鲁克的管理学书籍，希望结合以往的管理经验，可以有更多的收获。&lt;/p&gt;
&lt;p&gt;最后……我在这两三年做过的所有这些产品（无论是 2B 还是 2C、前端还是后台）中，逐渐明确了自己在产品方向的选择上的擅长之处和偏好，我个人更具备商业思维、喜欢和人打交道、对做一套完整的系统更有兴趣也更擅长。产品经理是一个非常让人成长的工作，接下来，我会带着这几年的经验和对未来更加明确的规划走下去，深耕一个方向，希望新的一年有更多的成长与收获！&lt;/p&gt;</content><category term="产品管理"></category><category term="产品经理"></category><category term="Product Management"></category><category term="工作总结"></category><category term="日记"></category></entry><entry><title>我的2015年终总结</title><link href="/my-2015.html" rel="alternate"></link><published>2016-01-11T11:08:00+00:00</published><updated>2016-01-11T11:08:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2016-01-11:/my-2015.html</id><summary type="html">&lt;p&gt;一转眼又到了写年终总结的时候。还记得去年年终我在自学 iOS 开发时候写的总结。&lt;/p&gt;
&lt;p&gt;一年很快过去了，我的确不再写 Java 了，但是也没有成为一名 iOS 开发，而是成为了一名产品经理。现在我还是想写代码，但是我也喜欢做产品经理自己可以掌握产品生命的感觉。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;今年上半年的关键词是“求职”。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我在3月份的离职太过冲动，虽然想法已经酝酿很久了——但是对求职市场的认知还是不够到位；对自己的技术水平也太过于自大。现在网络上已经有 iOS 工资大跌的新闻，更有很多培训班学员和公司面试官们对 iOS 求职市场混乱的抱怨，而在今年初我找工作时，这些 iOS 求职市场趋向饱和的现象就已经初见端倪。而且我的学习也的确不够到位，耐心还是太少，做了一半的豆瓣客户端就耐不住性子非想找个工作；另外对技术类职位的求职准备不够，求职知识准备不充分；最后也是最重要的是，我对深层次的技术知识似乎有潜意识的恐惧，不敢踏出自己在心理上的舒适圈，对新技术的特性不敢去深入探究。&lt;/p&gt;
&lt;p&gt;产品经理的工作，找起来更是机会少少，因为“人人都是产品经理”，这也是进入互联网行业门槛最低的职位之一。在珠三角投了一圈简历，还是没有得到几个机会，有的公司则是太奇葩太坑。没想到自己还有机会可以进入现在这家公司，更没有想到自己一进去就负责了这么多的产品，并且完整的参与了几个产品从开始到上线的过程 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;一转眼又到了写年终总结的时候。还记得去年年终我在自学 iOS 开发时候写的总结。&lt;/p&gt;
&lt;p&gt;一年很快过去了，我的确不再写 Java 了，但是也没有成为一名 iOS 开发，而是成为了一名产品经理。现在我还是想写代码，但是我也喜欢做产品经理自己可以掌握产品生命的感觉。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;今年上半年的关键词是“求职”。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我在3月份的离职太过冲动，虽然想法已经酝酿很久了——但是对求职市场的认知还是不够到位；对自己的技术水平也太过于自大。现在网络上已经有 iOS 工资大跌的新闻，更有很多培训班学员和公司面试官们对 iOS 求职市场混乱的抱怨，而在今年初我找工作时，这些 iOS 求职市场趋向饱和的现象就已经初见端倪。而且我的学习也的确不够到位，耐心还是太少，做了一半的豆瓣客户端就耐不住性子非想找个工作；另外对技术类职位的求职准备不够，求职知识准备不充分；最后也是最重要的是，我对深层次的技术知识似乎有潜意识的恐惧，不敢踏出自己在心理上的舒适圈，对新技术的特性不敢去深入探究。&lt;/p&gt;
&lt;p&gt;产品经理的工作，找起来更是机会少少，因为“人人都是产品经理”，这也是进入互联网行业门槛最低的职位之一。在珠三角投了一圈简历，还是没有得到几个机会，有的公司则是太奇葩太坑。没想到自己还有机会可以进入现在这家公司，更没有想到自己一进去就负责了这么多的产品，并且完整的参与了几个产品从开始到上线的过程。回顾这段求职经历，可以初步了解到一些产品经理的求职和职业规划原则：第一，经验与产品（结果）说话；第二，不同产品类型所需的产品经理都不一样，有的需要会技术、有的则需要懂用户懂交互，因此在职业规划时应注重职业方向的连贯性；第三，产品经理始终是个经验为重的职业，看书和别人的文章再多，也不如自己实践更有效。&lt;/p&gt;
&lt;p&gt;到了6月底，我机缘巧合找到了现在的工作，来到了上海，开始了产品经理的工作。在这半年的工作中，我感到自己变得更加成熟了，理解了“责任”两个字的意义，也更加磨砺了自己的性格。但是我知道目前的自己仍然不算是个足够优秀的产品经理。仍然需要学习、练习和思考，对满足现状的安逸思想保持足够的警惕。&lt;/p&gt;
&lt;p&gt;今年，我缺少了对生活的热忱，放弃了几乎所有的爱好和正常生活情趣。这是件很可怕的事。新的一年，我希望自己可以努力生活，在工作中投入更多的专注，勿忘自己转做产品的初心。&lt;/p&gt;
&lt;p&gt;——写于2015年12月31日候机室中&lt;/p&gt;</content><category term="工作总结"></category><category term="日记"></category></entry><entry><title>红包/优惠券防刷手段</title><link href="/how-to-prevent-bot.html" rel="alternate"></link><published>2015-10-15T21:38:00+00:00</published><updated>2015-10-15T21:38:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2015-10-15:/how-to-prevent-bot.html</id><summary type="html">&lt;p&gt;在红包/优惠券发放的流程中，有以下关键的几个流程点：&lt;strong&gt;运营发送时、用户领用时、用户使用时&lt;/strong&gt;，以及有时候会有的过程：&lt;strong&gt;现金的转账&lt;/strong&gt;或&lt;strong&gt;优惠券的赠送&lt;/strong&gt;等。在每个过程点上面都可以进行防刷措施。&lt;/p&gt;
&lt;p&gt;红包/优惠券又分为以下几种：&lt;strong&gt;现金红包、付款时抵扣、使用后返现、使用后返券&lt;/strong&gt;等&lt;/p&gt;
&lt;h2&gt;防刷方法&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;商业手段&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;限制发放的库存&lt;/li&gt;
&lt;li&gt;改变使用的策略&lt;/li&gt;
&lt;li&gt;改变红包/优惠券的类型&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;技术手段&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;账户真实性验证（如实名制、验证码、手机校验码等）&lt;/li&gt;
&lt;li&gt;调用频率、时间段、IP/cookies等可疑性用户排除&lt;/li&gt;
&lt;li&gt;对于可获取的用户数据时，研究用户曾经的行为判定是否发放&lt;/li&gt;
&lt;li&gt;学习式防刷机制：学习刷单动作进行自动调整&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其他手段&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最后，不但要注意防刷，还要防止误封了或防刷措施未起作用时对普通用户的补偿措施，以免用户产生怨念情绪。&lt;/p&gt;</summary><content type="html">&lt;p&gt;在红包/优惠券发放的流程中，有以下关键的几个流程点：&lt;strong&gt;运营发送时、用户领用时、用户使用时&lt;/strong&gt;，以及有时候会有的过程：&lt;strong&gt;现金的转账&lt;/strong&gt;或&lt;strong&gt;优惠券的赠送&lt;/strong&gt;等。在每个过程点上面都可以进行防刷措施。&lt;/p&gt;
&lt;p&gt;红包/优惠券又分为以下几种：&lt;strong&gt;现金红包、付款时抵扣、使用后返现、使用后返券&lt;/strong&gt;等&lt;/p&gt;
&lt;h2&gt;防刷方法&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;商业手段&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;限制发放的库存&lt;/li&gt;
&lt;li&gt;改变使用的策略&lt;/li&gt;
&lt;li&gt;改变红包/优惠券的类型&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;技术手段&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;账户真实性验证（如实名制、验证码、手机校验码等）&lt;/li&gt;
&lt;li&gt;调用频率、时间段、IP/cookies等可疑性用户排除&lt;/li&gt;
&lt;li&gt;对于可获取的用户数据时，研究用户曾经的行为判定是否发放&lt;/li&gt;
&lt;li&gt;学习式防刷机制：学习刷单动作进行自动调整&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其他手段&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最后，不但要注意防刷，还要防止误封了或防刷措施未起作用时对普通用户的补偿措施，以免用户产生怨念情绪。&lt;/p&gt;</content><category term="营销"></category><category term="风控"></category><category term="营销活动"></category></entry><entry><title>写在我的第一个产品上线前</title><link href="/about-my-first-product.html" rel="alternate"></link><published>2015-09-29T18:22:00+00:00</published><updated>2015-09-29T18:22:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2015-09-29:/about-my-first-product.html</id><summary type="html">&lt;p&gt;&lt;em&gt;——然而这个原本计划十一上线第一期的产品，仍然没有能在十一前上线。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;这是我接手的第二个产品，因为紧迫性排在了最前面，因此成为了预计可以第一个完成的产品。然而尽管大家都努力地投入精力在这个产品中，然而由于合作方的这个产品也没有开发完成，还在不停地变动，而且我自己也缺少经验做得很不足，因此掉进了一个又一个坑。&lt;/p&gt;
&lt;p&gt;通过这个产品，我算是真正的体验了一把大公司的工作氛围。原本我以为 MZ 就是大公司，如今才体会到了真正的“大”公司是什么样——第一就是分工之细，每个人安守自己岗位的本分，一个功能可能需要多个团队才能完成，这样在沟通过程中就会有一些困难和磕碰，而且也多出许多时间成本；第二，对“流程”比较重视，我觉得大部分人虽然痛恨所谓的“流程”，但是在工作中更多适应了大公司的员工则会善用“流程”来维护自己。在这个项目中，我接触到了多个部门的多个团队，也走了很多冗长的流程，每天白天都在不停的开会和跑来跑去沟通，只有下班后才有时间好好写一下需求文档，在和合作方沟通过程中，由于对方也是这样的大公司，而且对方对流程更加重视，因此沟通中花费了更多的时间成本。&lt;/p&gt;
&lt;p&gt;我所在的团队的风格是擅长执行，在写需求等书面性的事情上面则比较偏弱。我认为这一点在这次产品的实施中也造成了比较多的磕绊。由于商务和老板对这个产品都比较看重，leader 便希望可以快速上线一版，因此在提需求时，直接都是含糊的“第一版按照另一个XX产品做就好 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;——然而这个原本计划十一上线第一期的产品，仍然没有能在十一前上线。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;这是我接手的第二个产品，因为紧迫性排在了最前面，因此成为了预计可以第一个完成的产品。然而尽管大家都努力地投入精力在这个产品中，然而由于合作方的这个产品也没有开发完成，还在不停地变动，而且我自己也缺少经验做得很不足，因此掉进了一个又一个坑。&lt;/p&gt;
&lt;p&gt;通过这个产品，我算是真正的体验了一把大公司的工作氛围。原本我以为 MZ 就是大公司，如今才体会到了真正的“大”公司是什么样——第一就是分工之细，每个人安守自己岗位的本分，一个功能可能需要多个团队才能完成，这样在沟通过程中就会有一些困难和磕碰，而且也多出许多时间成本；第二，对“流程”比较重视，我觉得大部分人虽然痛恨所谓的“流程”，但是在工作中更多适应了大公司的员工则会善用“流程”来维护自己。在这个项目中，我接触到了多个部门的多个团队，也走了很多冗长的流程，每天白天都在不停的开会和跑来跑去沟通，只有下班后才有时间好好写一下需求文档，在和合作方沟通过程中，由于对方也是这样的大公司，而且对方对流程更加重视，因此沟通中花费了更多的时间成本。&lt;/p&gt;
&lt;p&gt;我所在的团队的风格是擅长执行，在写需求等书面性的事情上面则比较偏弱。我认为这一点在这次产品的实施中也造成了比较多的磕绊。由于商务和老板对这个产品都比较看重，leader 便希望可以快速上线一版，因此在提需求时，直接都是含糊的“第一版按照另一个XX产品做就好”这样的需求，而没有自己留出一点时间认真的思考和解构一下需求、完整地思考一下用户场景，更没有仔细地研究合作方的平台究竟有什么特殊性和限制，就直接向其他团队和开发提了需求。导致提的需求随着不停地发现各种坑而不停地变动，或者就是讨论讨论着突然发现另一个特殊的使用场景下会有问题才现想如何弥补。另外就是 PRD 的重要性，原本我以为文档一类东西不是很重要，很多产品经理的 blog 里面也说产品经理不应当纠结文档，没想到其实 PRD 还是很重要，其一是这个是“流程”上必不可缺的东西，如果没有的话其他团队会因此为借口不去为你排期；其二是，PRD / 需求文档是一个“证据”，究竟团队中成员做什么、出问题了时候按照什么办等等都是按照落实在纸面上面的东西，开发并不会为了产品去想，所以流程是否合理、流程中是否缺失了某个环节他们也不会考虑，都是产品要写清楚的，而不应该期望别人按照你认为的“正常逻辑”做。在项目快上线前，我偶然看到了我们这里一个项目经理的文档，里面的需求拆分的极细，让我大为触动。&lt;/p&gt;
&lt;p&gt;产品好不容易通过立项进入了开发，渐渐的许多问题又浮现出来。我才恍然大悟：即使真的是“像素级复制”的产品，仍然会有很多不同，永远不要轻信别人说的话而轻视了产品的复杂度！即使一些小小的编码问题、长度限制、人工审核松紧度这类看似很小的不同，也会由于蝴蝶效应产生很大的差异。&lt;/p&gt;
&lt;p&gt;同样我还体会到，作为产品经理，不应当像公司内其他职位的员工一样只着眼于自己职责范围内的事。作为产品经理，我们的目标应当首先是推动产品完成，因此即使某些工作并不属于产品的范畴也应当随时关注、想办法完成。不得不说，我有点偷懒，并且为了防止自己给别人留下太 pushy 的形象而在某些环节没有跟紧。例如，这次之所以没有在节前发布成功，说起来是因为合作方在十一前 2 天才告知原来给错了一个接口，实则我自己在刚拿到接口文档时也没有监督负责这部分的团队的开发仔细测试，只是含糊的被告知“你们的需求这个接口都能调通”，而没有和 RD 明确地提出。当然这个事情很多方都有问题，然而如果我进一步问一句，这个问题或许就可以避免。&lt;/p&gt;
&lt;p&gt;另外就是那些最后一步的操作，不要留在最后一步，如果可以完成就提前完成。留出一段时间给可能出现的问题。做产品最应该信仰的是墨菲定律——觉得会发生的不好的事，真的一定就会发生！&lt;/p&gt;
&lt;p&gt;总结下来，即是对于我这样的 0 岁初级产品经理一定要掌握的两种基础能力——&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对于产品的推动能力&lt;/li&gt;
&lt;li&gt;对于需求的解构能力&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这两点如同武功高手在童年时期练习的基本功，虽然看似简单，但是想要做好，并不容易。&lt;/p&gt;
&lt;p&gt;节后还有更多的项目需求需要提出。希望可以保持精力不停挑战！&lt;/p&gt;</content><category term="工作总结"></category><category term="日记"></category></entry><entry><title>0岁产品经理(Growth Hacker)体验报告</title><link href="/to-be-a-growth-hacker.html" rel="alternate"></link><published>2015-09-17T01:24:00+00:00</published><updated>2015-09-17T01:24:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2015-09-17:/to-be-a-growth-hacker.html</id><summary type="html">&lt;p&gt;从我正式成为一个产品经理开始，已经有 2 个多月的时间了。这两个月过得十分充实，如果不回想一下，我还以为自己已经在这里工作很久了。感谢自己的 leader，将我放进一池水中让我自己学习游泳，一进入公司便被分配了几项产品来负责。和我做程序员时领悟到的学习方法一样——实践果然是最好的学习！&lt;/p&gt;
&lt;p&gt;目前我手头的产品有三个比较大型的和若干（数量 &amp;gt; 3，且时刻在增长）的小产品。总体来说，有涉及到移动产品，更主要的则是为了营销而做的无线产品（好拗口）。从前这个营销的产品团队最主要都在负责 SEO/SEM 以及现有的某些与无线相关的技术营销产品，但是随着市场的不断变化、技术营销手段的不断进步，未来在这条道路也会变得更加宽广。&lt;/p&gt;
&lt;p&gt;虽然目前我的职位叫做“产品经理”，但是从团队的架构和接手的产品来看，这个职位都更接近目前硅谷很流行的 &lt;code&gt;growth hacker&lt;/code&gt; 职位，而我们的团队也在向着增长团队而发展。&lt;/p&gt;
&lt;p&gt;增长黑客，或者技术营销产品经理这个角色，表面上和互联网行业的产品经理很像，但是我也在工作中体会到了两者的不同——&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;growth hacker 比一般的产品经理更注重数据，不论是提供论据支撑还是分析现状&lt;/li&gt;
&lt;li&gt;growth hacker 对人本身的执行力要求更高，抗压力更强&lt;/li&gt;
&lt;li&gt;growth …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;从我正式成为一个产品经理开始，已经有 2 个多月的时间了。这两个月过得十分充实，如果不回想一下，我还以为自己已经在这里工作很久了。感谢自己的 leader，将我放进一池水中让我自己学习游泳，一进入公司便被分配了几项产品来负责。和我做程序员时领悟到的学习方法一样——实践果然是最好的学习！&lt;/p&gt;
&lt;p&gt;目前我手头的产品有三个比较大型的和若干（数量 &amp;gt; 3，且时刻在增长）的小产品。总体来说，有涉及到移动产品，更主要的则是为了营销而做的无线产品（好拗口）。从前这个营销的产品团队最主要都在负责 SEO/SEM 以及现有的某些与无线相关的技术营销产品，但是随着市场的不断变化、技术营销手段的不断进步，未来在这条道路也会变得更加宽广。&lt;/p&gt;
&lt;p&gt;虽然目前我的职位叫做“产品经理”，但是从团队的架构和接手的产品来看，这个职位都更接近目前硅谷很流行的 &lt;code&gt;growth hacker&lt;/code&gt; 职位，而我们的团队也在向着增长团队而发展。&lt;/p&gt;
&lt;p&gt;增长黑客，或者技术营销产品经理这个角色，表面上和互联网行业的产品经理很像，但是我也在工作中体会到了两者的不同——&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;growth hacker 比一般的产品经理更注重数据，不论是提供论据支撑还是分析现状&lt;/li&gt;
&lt;li&gt;growth hacker 对人本身的执行力要求更高，抗压力更强&lt;/li&gt;
&lt;li&gt;growth hacker 更类似于营销人员的想法——即更注重结果，而这个结果是一个比较具体的目标，而不是特别的在乎用户体验&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是一个全新的领域，然而其实也并不新，只是近几年好事者整理并做了一些概念上的创新罢了。然而，如果想做好，我认为也和产品经理这个新兴职位一样，需要正确地点亮相关技能树，才可以做到专业，团队效果才可以达到最好。另外，我认为这个职位比产品经理更难培养，因为它是一个完全地 100% 地接触真实市场和真实用户、需要实干才可以获得经验并得以提升专业技能的职业。同时想要做好，我认为不仅仅需要会做明面上的 marketing，如果有“&lt;em&gt;并不干净的&lt;/em&gt;”经验反而会做得更好。这句话的意思并不是说一家公司也要做一些不道德的营销手段，而是做过这些工作的人，会更了解用户，毕竟&lt;strong&gt;冰山只有10%露在海面上&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在我刚决定不再做开发，改做产品经理时，我并没有想到会接触到这样一片新的领域。这两个月中，我做了一个移动类app产品、为已有的功能加了一些营销渠道统计的功能、并且在做更多的移动类平台化的东西。我原本以为自己会更喜欢做app类产品，但是都体验过以后，渐渐发现增长职位才是最适合我的——既有营销经验又有技术功底，同时本科时期学习的是生物信息技术这种数据分析类学科。（看来通过做一个app然后创业走上人生巅峰这条路对于我来说是走不通啦！）&lt;/p&gt;
&lt;p&gt;虽然我才进入公司、甚至进入这个岗位短短2个多月，但是我觉得自己做了很多以前没有想到的事，我想这就是大公司的好处吧，其实员工也并不是一个螺丝钉，只要想进步反而可以获得很多小公司无法给到的成长机会，而且可以不用太过有后顾之忧的去尝试。虽然大公司的冗长流程和复杂架构让人很崩溃，但是我想如果可以“顺势而为”，在这种情况下找到最快的推进方式，或许也可以将阻力降至最低。&lt;/p&gt;
&lt;p&gt;做了产品经理以后工作更加忙碌，但是感觉每天都在成长！希望自己可以在未来的工作中，更快学习到产品经理、GH 的技能，可以在岗位上做的更加出色。&lt;/p&gt;</content><category term="工作总结"></category><category term="日记"></category><category term="增长黑客"></category></entry><entry><title>2014年4月QQ音乐竞品分析报告</title><link href="/opponents-analysis-in-online-music-by-2014.html" rel="alternate"></link><published>2015-05-09T10:01:00+00:00</published><updated>2015-05-09T10:01:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2015-05-09:/opponents-analysis-in-online-music-by-2014.html</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;本文禁止转载&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;准备从开发转做产品，在辞职后看了一些产品方面的书，自学了一些产品方面的知识。用心研究了一下移动音乐app，写了一篇QQ音乐的竞品分析报告，原本想要用这个来应聘腾讯的产品职位，但是腾讯的初级产品职位只招实习生。&lt;/p&gt;
&lt;p&gt;现在放出下载地址：&lt;a href="http://pan.baidu.com/s/1bn8Rtbp"&gt;戳这里百度网盘下载&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;注：并非专业正规结构，仅供参考，禁止抄袭与转载&lt;/p&gt;
&lt;p&gt;页面截图：&lt;/p&gt;
&lt;p&gt;&lt;img alt="报告页面截图" src="http://sunrise-boulevard-github.qiniudn.com/20150501报告页面截图.png"&gt;&lt;/p&gt;
&lt;p&gt;这个报告选择了虾米音乐与网易云音乐作为竞品，主要侧重从功能、界面与运营上进行对比，分析移动音乐类app目前的市场发展状况。&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;本文禁止转载&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;准备从开发转做产品，在辞职后看了一些产品方面的书，自学了一些产品方面的知识。用心研究了一下移动音乐app，写了一篇QQ音乐的竞品分析报告，原本想要用这个来应聘腾讯的产品职位，但是腾讯的初级产品职位只招实习生。&lt;/p&gt;
&lt;p&gt;现在放出下载地址：&lt;a href="http://pan.baidu.com/s/1bn8Rtbp"&gt;戳这里百度网盘下载&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;注：并非专业正规结构，仅供参考，禁止抄袭与转载&lt;/p&gt;
&lt;p&gt;页面截图：&lt;/p&gt;
&lt;p&gt;&lt;img alt="报告页面截图" src="http://sunrise-boulevard-github.qiniudn.com/20150501报告页面截图.png"&gt;&lt;/p&gt;
&lt;p&gt;这个报告选择了虾米音乐与网易云音乐作为竞品，主要侧重从功能、界面与运营上进行对比，分析移动音乐类app目前的市场发展状况。&lt;/p&gt;</content><category term="竞品分析"></category><category term="产品管理"></category><category term="产品经理"></category></entry><entry><title>Apple Watch 终来袭！考验产品人员的新时刻</title><link href="/prepare-for-apple-watch-app-design.html" rel="alternate"></link><published>2015-03-28T16:14:00+00:00</published><updated>2015-03-28T16:14:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2015-03-28:/prepare-for-apple-watch-app-design.html</id><summary type="html">&lt;p&gt;今天一大早，手机上的 App Store 便在图标的右上角赫然显示了红红的 5 字，提示我今天有 5 个应用的更新。&lt;/p&gt;
&lt;p&gt;点击进入查看，其中竟然有 4 款应用的更新都是为了适配 Apple 公司新发布的 Apple Watch。距离苹果公司上次发布会已经有两周多的时间，直到今天，我们才可以说感受到 Apple Watch 风暴的强势来袭。那让我们来看一看这四款应用分别都新增了哪些功能：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;微信（正如发布会中展示的那几个功能）&lt;/li&gt;
&lt;li&gt;在 Apple Watch 上接受朋友的消息并快速回复&lt;/li&gt;
&lt;li&gt;在 Apple Watch 上浏览朋友圈&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 Apple Watch 上通过&lt;em&gt;“雷达加朋友”&lt;/em&gt;添加新朋友&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;微博&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;有关 Apple Watch 的功能：&lt;ul&gt;
&lt;li&gt;重要消息一触即达，不再错过任何新鲜事&lt;/li&gt;
&lt;li&gt;更快捷查看你的运动信息&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;另外为微博添加了 …&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;今天一大早，手机上的 App Store 便在图标的右上角赫然显示了红红的 5 字，提示我今天有 5 个应用的更新。&lt;/p&gt;
&lt;p&gt;点击进入查看，其中竟然有 4 款应用的更新都是为了适配 Apple 公司新发布的 Apple Watch。距离苹果公司上次发布会已经有两周多的时间，直到今天，我们才可以说感受到 Apple Watch 风暴的强势来袭。那让我们来看一看这四款应用分别都新增了哪些功能：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;微信（正如发布会中展示的那几个功能）&lt;/li&gt;
&lt;li&gt;在 Apple Watch 上接受朋友的消息并快速回复&lt;/li&gt;
&lt;li&gt;在 Apple Watch 上浏览朋友圈&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 Apple Watch 上通过&lt;em&gt;“雷达加朋友”&lt;/em&gt;添加新朋友&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;微博&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;有关 Apple Watch 的功能：&lt;ul&gt;
&lt;li&gt;重要消息一触即达，不再错过任何新鲜事&lt;/li&gt;
&lt;li&gt;更快捷查看你的运动信息&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;另外为微博添加了“微博运动”功能：（可以说仅给 iOS 8 的 iPhone 5s/6/6p 尝鲜）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;与你关注的名人、好友比拼步数&lt;/li&gt;
&lt;li&gt;查看自己进入运动量评分&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支付宝钱包&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不知是否因为众所周知的“支付婊”事件影响，这次更新关于 Apple Watch 的话只有一句“适用于 Apple Watch，全新支付体验”，但是在其紧随发布会发表的微博中，我们可以看到这一句“支付宝钱包将提供余额宝、付款码和汇率查询三项功能”&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;印象笔记&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;用 Apple Watch 听写笔记，自动转文字并同步到印象笔记&lt;/li&gt;
&lt;li&gt;查看最近创建、更新或浏览的笔记&lt;/li&gt;
&lt;li&gt;对 Apple Watch 口述搜索内容，即可得到结果&lt;/li&gt;
&lt;li&gt;设置提醒并接收通知&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;当然，相信还有更多应用也适配了 Apple Watch，在此仅仅来分析这几款应用。&lt;/p&gt;
&lt;p&gt;在这里，我们可以看到，大部分应用都试图调整自己功能的实现方式来迎合 Apple Watch 局限小屏幕 + tap 提示的交互方式。&lt;/p&gt;
&lt;p&gt;而参考总结 &lt;a href="https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/WatchHumanInterfaceGuidelines/index.html"&gt;苹果官方的 Apple Watch Human Interface Guidelines&lt;/a&gt; 与&lt;a href="http://www.youtube.com/watch?v=y-waTi8BPdk"&gt;Introducing the Apple Watch 视频&lt;/a&gt;，Apple Watch 的几种操作方式包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;手腕动作：抬手腕，激活点亮屏幕，显示消息提示&lt;/li&gt;
&lt;li&gt;Digital Crown，即侧面的旋钮（见图1）：上下扭动负责放大缩小、滚动功能；也是 Home 按键。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="图1 Apple Watch 的 Digital Crown" src="http://sunrise-boulevard-github.qiniudn.com/20150328crown.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Force Touch：不仅仅可以感觉到 Touch，还可以感受到 Force。相当于在交互中加入了一个“力度”的维度。一般用来唤起应用的菜单&lt;/li&gt;
&lt;li&gt;全新的手势动作：简单的点按；纵向扫动负责在页面内滚动；横向扫动负责页面之间的切换；左边缘的扫动返回父界面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;而此文档中阐述了几个苹果公司希望且建议 Apple Watch版本 app 拥有的特点，而这才是作为产品人员与交互设计师着眼的重点。这几点分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;personal&lt;/strong&gt;（拟人化/人性化），即动作应像人们平时用普通手表一样自然&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;holistic&lt;/strong&gt;（整体化），苹果宣称 Watch 将实体物品与软件的边界打破，因此设计时应&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lightweight&lt;/strong&gt;（轻量化），应该符合 Apple Watch 屏幕小、交互快捷、使用频繁的特点设计&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上三点看起来简洁，实则大有玄机。正所谓“大道至简”、“简约而不简单”，精简一个产品其实也在考验产品人员对于自家产品和用户、以及产品载体（例如此处为 Apple Watch）的了解程度。&lt;/p&gt;
&lt;p&gt;究竟哪些功能是 app 最重要，不，应该说是最值得展示在 watch 上面的？怎样设计才能符合 Apple Watch 的交互？&lt;/p&gt;
&lt;p&gt;通过分析苹果的官方文档、介绍视频、以及&lt;a href="http://www.apple.com/cn/watch/"&gt;苹果官网上对于 Apple Watch 的介绍&lt;/a&gt;，产品设计人员可以比较清晰的了解苹果公司对产品的设计要求。而我还发现了一些在设计 app 时值得注意的问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Apple Watch 作为智能佩戴设备，仍然花了很大力气着眼于运动与健康。在上一期发布中，在 iOS 8 集成了 HealthKit，而这期发布会上，用大量的时间讲解了面向健康的 ResearchKit。这都充分说明了，Apple Watch 是一个非常优秀的监控运动与健康的设备，并且鼓励大家开发这样的功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Apple Watch 目前并不是一个完整的智能设备，而只是一个 iPhone/iPad 的配套设备，因此设计 app 时在这方面也应该加强考虑。由于本身产品的局限性，苹果公司目前并没有将其做为一个可以完全独立的设备，而只是作为 iPhone 的配套设备来锦上添花。在&lt;a href="http://www.apple.com/cn/watch/new-ways-to-connect/"&gt;官网上对其沟通方式的介绍&lt;/a&gt;，可以看到以下的几条：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你既可借助内置的扬声器及麦克风&lt;strong&gt;快速&lt;/strong&gt;聊上几句，也可顺畅地将来电转至你的 iPhone，再慢慢细聊。只需用手遮住 Apple Watch 的屏幕，就可以将来电转为静音状态。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以及&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Apple Watch 上开始， iPhone 上继续。&lt;/p&gt;
&lt;p&gt;Apple Watch 适合于快速互动，但有时你难免要进行深入交流，因此，我们让你可以轻松地将信息、电话和邮件从 Apple Watch 转至 iPhone，从中断的地方接着完成。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可见苹果并不提倡在 Watch 上完整的进行内容复杂的展示与操作。联想到最近苹果推出的 Handoff 功能，iOS 应用以及配套的 Apple Watch 版本应用都应考虑到 Apple Watch 只是一个提示和短内容快捷操作的便携设备，复杂信息在交互上引导用户、功能上允许用户切换到 iPhone 或其他 iOS 设备上继续进行，并进一步考虑优化做到不同设备间操作的“无痕衔接”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;手势操作的变化，一切只为了防止手部阻碍了屏幕显示。由于屏幕小到大概两只手指就可以覆盖，苹果一直引以为豪的多根手指的手势操作不能够再应用在这样的屏幕上，因此 Apple Watch 将普通手表中的旋钮加以改良，替代了很多手势动作，更在触摸屏幕的动作中加入“力度”的维度。在交互的设计上应当学习原生 Apple Watch 应用的巧妙运用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Glances 界面需要产品人员更加仔细的思考，究竟 app 的哪些功能是最重要又适合被展示在此页面的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;由于内容紧凑，更考虑应用的设计功底。在扁平化时代之后，更需要不同的颜色、字体、排版等来使交互层次更佳清晰明了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;纵观本文开头所说的这几个 app，均在按照以上 Apple 对 app 的设计要求在进行 watch 版本的改造。这几个 app 大部分都考虑到了屏幕小的基本的问题，在内容的展示中，更倾向于展示图形（如支付宝钱包的付款/转账主要使用付款码，见图2），或者使用近距离传输方式（如微信加朋友方式仅保留了为更便捷的“雷达加朋友”）；在内容的输入时，少数不再支持输入（如微博），大部分则是使用官方提倡的语音识别输入方式，这里不得不为 Evernote（印象笔记）的适配点赞。&lt;/p&gt;
&lt;p&gt;&lt;img alt="图2 支付宝钱包 Apple Watch 版本" src="http://sunrise-boulevard-github.qiniudn.com/20150328alipayForAppleWatch.png"&gt;&lt;/p&gt;
&lt;p&gt;而微博则是借 Apple Watch 发布的东风打入运动类 app 的“红海”，不但利用了 Apple Watch 作为可穿戴式设备的运动监测属性，更在 iOS 客户端中特意加入了“运动”功能。对于这个改动，微博的动作很细微，并没有大张旗鼓地立刻进行宣传。但是我们可以看到“微博运动”中“&lt;code&gt;与你关注的名人、好友比拼步数&lt;/code&gt;”的功能，则是充分把握住了微博本身社交的属性。或许可以期待它可以像百度之前的“比比你与名人脸的相似度”一样，吸引用户们的强烈关注。但微博客户端将这个“运动”功能路径隐藏的很深，无论是从微博现有的推广手段，还是我个人对产品的分析，我都不认为它会将这个功能作为一个大卖点。毕竟微博最重要的还是社交，这个功能只是用来吸引眼球和增强用户黏度的手段之一。&lt;/p&gt;
&lt;p&gt;转头看微信，却是感觉微信这次的适配有些让人失望。初次在发布会上看到展示的微信，令我比较惊讶的是适配版本中竟然有“朋友圈”功能，并且与（见图3）。我猜测，“朋友圈”在这几年的发展中，已经远远偏离了（当然是好的偏离）原本微信的产品团队所预期的方式，因此现在的微信产品团队将“朋友圈”视为比较重要的功能之一。然而，是否在 Apple Watch 上应当有这个功能，我与微信的产品团队却有不一样的认同。首先，Apple Watch 的屏幕并不适合看“朋友圈”这样复杂的信息；其次，也是比较根本的原因，Apple Watch 的定位应当是作为信息提示和便携使用的，抬着手腕的姿势很累，人们遇到紧急或者简单的信息可以使用它进行回复，遇到复杂的消息用户还是更倾向于使用 iPhone 处理。另外即使真的要显示“朋友圈”，如图所示的界面布局设计也是很失败的，几乎是照搬了 iOS 版本的“朋友圈”的设计，而并没有考虑到 Apple Watch 的特点。而微信似乎没有应用 Apple Watch 提倡的比较实用的 Glances 界面，真的这样的交互比 Glances 更好吗？我认为未必，仍然有待深入考量。还有 Force Touch ？这个图片上没有展示出来，我们只有实际用过才知晓了。总而言之，或许是微信团队并没有真的重视 Apple Watch 并投入足够的资源，或者我只能说这个产品人员有点让人失望了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="图3 Apple Watch 版微信客户端" src="http://sunrise-boulevard-github.qiniudn.com/20150328wechatForAppleWatch.png"&gt;&lt;/p&gt;
&lt;p&gt;另外，Apple Watch 拥有一个 Tap 功能，是官方宣传的亮点之一——宣传语是“A new way to connect”——可以同步传送 tap、图形、甚至自己的脉搏（见图4）。作为社交类 app，一个建议就是，是否可以将这个功能集成在自己的 watch 适配版本中？例如微信，可以聊天过程中传送给当前的微信好友 tap、sketch、heartbeat……不失为一种既有 Apple Watch 特色，又更有趣的交流方式。&lt;/p&gt;
&lt;p&gt;&lt;img alt="图4 传输画图" src="http://sunrise-boulevard-github.qiniudn.com/20150328sketch.png"&gt;&lt;/p&gt;
&lt;p&gt;还可以在 &lt;a href="http://watchaware.com"&gt;WatchAware.com&lt;/a&gt; 这个网站查看到更多爱好者设计与开发的优良 Apple Watch 应用。&lt;/p&gt;
&lt;p&gt;当然，作为一个 app 的产品设计者，不但应当了解界面应该如何设计，更应当，这些都需要与开发人员沟通、甚至自己阅读技术文档来了解哪些构思可以被实现。在这里我并没有更深入地阅读过 Apple 的 WatchKit 文档，上述的建议与意见也暂时仅限于个人就了解范围内的构思之中。&lt;/p&gt;
&lt;p&gt;尽管很多人都在唱衰 Apple Watch，但就苹果公司的品牌号召力和其宽范围的定价，我个人认为 Apple Watch 的市场在目前两年内还是很有潜力的。未来是否如此，仍要看苹果公司是否能带来更多的惊喜。&lt;/p&gt;</content><category term="Apple Watch"></category><category term="产品分析"></category><category term="产品经理"></category></entry><entry><title>为Coding iOS 客户端添加 LBS 定位功能</title><link href="/develop-lbs-on-coding-app.html" rel="alternate"></link><published>2015-03-06T13:35:00+00:00</published><updated>2015-03-06T13:35:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2015-03-06:/develop-lbs-on-coding-app.html</id><summary type="html">&lt;h2&gt;I 准备工作&lt;/h2&gt;
&lt;h3&gt;项目中的需要考虑的问题与难点&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;地点信息怎样获取？怎样显示在地图上？&lt;/p&gt;
&lt;p&gt;Core Location Framework : 如何获得权限？以及向前（&amp;lt; iOS 8）兼容的代码如何实现？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;周边情况如何获取？大众点评或者其他的SDK吗？&lt;/p&gt;
&lt;p&gt;难点：如果用了别人的SDK，自己创建一个地点，怎么保存？只是保存在自己手机中，还是怎样？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;搜索用什么方法实现？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;储存的格式？怎样实现的？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;界面的实现：统一自定义的 View 的设计——刷新时候的插件？搜索框？还有其他的……都如何实现？&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;分析结构&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;“冒泡”页面中，每个 cell 都加一个显示地点的 UIButton，点击该地点 button 打开一个新视图，显示该地点的具体信息（或打开地图显示信息）&lt;/li&gt;
&lt;li&gt;“发布新冒泡”页面，加入一个“添加一个地点”的 UIButton …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h2&gt;I 准备工作&lt;/h2&gt;
&lt;h3&gt;项目中的需要考虑的问题与难点&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;地点信息怎样获取？怎样显示在地图上？&lt;/p&gt;
&lt;p&gt;Core Location Framework : 如何获得权限？以及向前（&amp;lt; iOS 8）兼容的代码如何实现？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;周边情况如何获取？大众点评或者其他的SDK吗？&lt;/p&gt;
&lt;p&gt;难点：如果用了别人的SDK，自己创建一个地点，怎么保存？只是保存在自己手机中，还是怎样？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;搜索用什么方法实现？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;储存的格式？怎样实现的？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;界面的实现：统一自定义的 View 的设计——刷新时候的插件？搜索框？还有其他的……都如何实现？&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;分析结构&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;“冒泡”页面中，每个 cell 都加一个显示地点的 UIButton，点击该地点 button 打开一个新视图，显示该地点的具体信息（或打开地图显示信息）&lt;/li&gt;
&lt;li&gt;“发布新冒泡”页面，加入一个“添加一个地点”的 UIButton，点击该 button 打开地点搜索页面。&lt;/li&gt;
&lt;li&gt;“搜索位置”的页面，经过测试，在微信中实现为：&lt;/li&gt;
&lt;li&gt;下拉刷新，每次多20条；&lt;/li&gt;
&lt;li&gt;一旦此页面中加载过一次位置信息，关上GPS的权限，此时刷新周边商户的信息仍然可以刷新出、并且搜索时也可以搜索此位置周边的商户信息——分析此 location 信息已经储存在这个页面中了。但是在下一次从“发送信息”页面进入位置页面时，如果没有GPS的权限时不可以读出任何商户的（包括XX市这个信息也不可以）&lt;/li&gt;
&lt;li&gt;当已经选择了一个位置时，再进入此页面（例如想要修改时），无论有没有GPS权限，都会显示搜索框、“不显示位置”、已经选择的位置这三个cell。当有GPS权限，加载附近商户信息，所在的市的信息会插入在“不显示位置”与已经选择的两个之间（indexPath.row == 2）&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;II 开始着手&lt;/h2&gt;
&lt;h3&gt;源码分析&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;界面上，没有使用 Cocoa 原有的 UITabView，而是使用了开源的 &lt;a href="https://github.com/robbdimitrov/RDVTabBarController"&gt;RDVTabBarController&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;在页面的响应交互中（如：发布冒泡时没有输入文字或图片，“发布”按钮就 disabled），Coding iOS 客户端没有过多使用 delegate，而是使用了第三方依赖 &lt;a href="https://github.com/ReactiveCocoa/ReactiveCocoa"&gt;ReactiveCocoa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;有关布局中：内容比较复杂的 cell 一般是直接写死了长宽和坐标，根据内容变化。而需要用到 AutoLayout 的地方，用了第三方的 NSLayoutConstraints 的 wrapper：&lt;a href="https://github.com/Masonry/Masonry"&gt;Masonry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;关于 URL 资源的获取，Coding 客户端使用了 AFNetworking 框架。在源代码中，新建了一个 Coding_NetAPIManager 类，把所有请求都写成一个方法［也是蛮拼的］供其他 controller 调用&lt;/li&gt;
&lt;li&gt;搜索地点的页面，有一个搜索框，可以复用项目页面的搜索框格式&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;框架学习&lt;/h3&gt;
&lt;h4&gt;Core Location&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;搜集地点数据是一个高能源消耗的动作，所以要选择适当的地点服务，小心使用，防止资源的耗尽&lt;/li&gt;
&lt;li&gt;收集用户当前的地点信息有两种服务：&lt;/li&gt;
&lt;li&gt;the standard location service：可以追踪的、特定精准度的、可配置的系统的&lt;/li&gt;
&lt;li&gt;the significant-change location service：只在仪器有很大变化（如 500 米或更甚）情况下进行更新&lt;/li&gt;
&lt;li&gt;地点服务不可用的情况：在系统设置或 app 设置中用户禁用了地点服务；某个 app 用户拒绝了地点服务；仪器在飞行模式或特定的硬件无法开启使用&lt;/li&gt;
&lt;li&gt;当未关闭 significant-change location service 时，iOS app 会因此 suspended 或 terminated，地点服务在收到新地点信息时会唤醒你的 iOS app，唤醒时，app 会被放在后台，你将有很短的时间手动重启位置服务并处理地点信息（你必须在任何待处理的地点信息递送到之前手动重启后台的 location service）。 并且注意让 app 做一些小动作来防止被终止。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;AFNetworking&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;大众点评 API&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;流程：注册应用 --&amp;gt; 在自己开发的应用中：请求声称签名（sign）来认证 --&amp;gt; 在后续请求中加入 appKey 与 sign&lt;/li&gt;
&lt;li&gt;认证过程：根据&lt;a href="http://developer.dianping.com/app/documentation/signature"&gt;官方网站上的文档&lt;/a&gt;，&lt;/li&gt;
&lt;li&gt;首先将不包括 appKey 与 secret 的所有要求的参数的 key 根据字符串，从 a 到 z 排序，连接成为一个字符串。然后将 appKey 的 value 值放在最前面作为前缀，secret 的 value 值放在最后面作为后缀。&lt;/li&gt;
&lt;li&gt;将这个字符串进行 SHA-1 加密&lt;/li&gt;
&lt;li&gt;将加密后的字符串进行 16 进制转码，转为大写&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;iOS 中的单例模式&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;未完待续ing……&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="iOS"></category><category term="Core Location"></category><category term="客户端开发"></category></entry><entry><title>iOS 开发学习笔记：Delegation 的理解</title><link href="/ios-delegation.html" rel="alternate"></link><published>2015-01-16T16:23:00+00:00</published><updated>2015-01-16T16:23:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2015-01-16:/ios-delegation.html</id><summary type="html">&lt;p&gt;iOS中的 delegation 对于我来说一直比较难以理解，这个代理模式按照字面看不难，但是深层次就比较难以理解了。在网上查了很多资料，理清了下思路：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/ios/documentation/General/Conceptual/CocoaEncyclopedia/DelegatesandDataSources/DelegatesandDataSources.html#//apple_ref/doc/uid/TP40010810-CH11-SW1"&gt;Apple 官方文档：Concepts in Objective-C 中的 Delegates and Data Source 章节&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://programmers.stackexchange.com/a/190400/80422"&gt;What is Delegation and why is it important in iOS programming?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.raywenderlich.com/46988/ios-design-patterns"&gt;Raywenderlich.com 的 iOS Design Pattern 教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;理解：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;松耦合：使得 A 类（delegate）依赖于 B 类（delegating 类），而不让 B 类知晓 …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;iOS中的 delegation 对于我来说一直比较难以理解，这个代理模式按照字面看不难，但是深层次就比较难以理解了。在网上查了很多资料，理清了下思路：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/ios/documentation/General/Conceptual/CocoaEncyclopedia/DelegatesandDataSources/DelegatesandDataSources.html#//apple_ref/doc/uid/TP40010810-CH11-SW1"&gt;Apple 官方文档：Concepts in Objective-C 中的 Delegates and Data Source 章节&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://programmers.stackexchange.com/a/190400/80422"&gt;What is Delegation and why is it important in iOS programming?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.raywenderlich.com/46988/ios-design-patterns"&gt;Raywenderlich.com 的 iOS Design Pattern 教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;理解：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;松耦合：使得 A 类（delegate）依赖于 B 类（delegating 类），而不让 B 类知晓 A 类的任何信息（B 类只知晓 A 类实现的 protocol 的信息）。实现&lt;strong&gt;单向&lt;/strong&gt;的依赖关系，而不会形成依赖环。&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;当不适合进行方法的继承实现时，可以使用这样的方法，这种模式就像是一种另类的依赖注入&lt;/li&gt;
&lt;li&gt;帮助维持 MVC 结构，将 Controller 和 View 分开来。比如有些方法逻辑上应该是 controller 负责的，就把这些责任从 view 上面代理给与 view 无关的这些 delegate 对象上实现。&lt;/li&gt;
&lt;li&gt;delegate 也适合帮助 view 应用那些大量的不同的数据并响应交互。&lt;/li&gt;
&lt;li&gt;通过自己注册 protocol，也可以帮助实现类之间的信息传递。例如：一个父 view controller 和一个子 view controller，当子传递信息（例如想知道它中间的一个 button 是否被按下了）给父时，传统的 property 方式难以实现，这时可以注册一个protocol：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;```
  @protocol MyChildDelegate
  - (void)bottonWasTappedInChild:(MyChildViewController *)childViewController
  @end&lt;/p&gt;
&lt;p&gt;@interface MyChildViewController : UIViewController&lt;/p&gt;
&lt;p&gt;@property (weak, nonatomic) id &lt;MyChildDelegate&gt; delegate;  // delegate 必须是 weak，否则会形成 retain cycle，哪个对象都不会被释放&lt;/p&gt;
&lt;p&gt;@end
  ```
  在 MyChildViewController 中，当按钮按下时，在这个动作中只要判断下是否你的 delegate 响应了这个 delegation 消息：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;- (IBAction)someButtonTapped:(id)sender {
      if ([self.delegate respondsToSelector:@selector(bottonWasTappedInChild:)]) {
          [self.delegate bottonrWasTappedInChild:self];
      }
  }&lt;/code&gt;
  将你的 MyChildViewController 的 delegate 设置为 self，并在 parent view controller 里面实现 &lt;code&gt;bottomWasTappedInChild:&lt;/code&gt; 方法，你就可以实现将消息从子控制器传递到父控制器了。&lt;/p&gt;</content><category term="iOS"></category><category term="delegate"></category><category term="代理模式"></category><category term="客户端开发"></category></entry><entry><title>iOS 开发学习笔记：界面的自定义</title><link href="/iOS-UI.html" rel="alternate"></link><published>2015-01-08T17:31:00+00:00</published><updated>2015-01-08T17:31:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2015-01-08:/iOS-UI.html</id><summary type="html">&lt;p&gt;前几天已经实现了豆瓣的登陆授权，用的比较简单的 UIWebView 中网页方式，没有自己使用界面模拟授权。&lt;/p&gt;
&lt;p&gt;今天开始做豆瓣的首页——即关注的人的广播页面。设计是用自定义的 UITableView  展示。今天学习下 Table View 的自定义。暂时没有用代码实现，继续用 storyboard。&lt;/p&gt;
&lt;p&gt;参考材料：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;官方文档：&lt;a href="https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/TableView_iPhone/AboutTableViewsiPhone/AboutTableViewsiPhone.html"&gt;Table View Programming Guide for iOS&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;iOS Programming The Big Nerd Ranch Guide 4th Edition&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;官方文档：&lt;a href="https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/index.html#//apple_ref/doc/uid/TP40006556"&gt;iOS Human Interface Guidelines&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;I 基础知识&lt;/h2&gt;
&lt;p&gt;两种基本的形式：&lt;code&gt;plain&lt;/code&gt; 和 &lt;code&gt;grouped&lt;/code&gt;，前者是不可分割的列表，后者有分离的 sections。&lt;/p&gt;
&lt;p&gt;使用 cell …&lt;/p&gt;</summary><content type="html">&lt;p&gt;前几天已经实现了豆瓣的登陆授权，用的比较简单的 UIWebView 中网页方式，没有自己使用界面模拟授权。&lt;/p&gt;
&lt;p&gt;今天开始做豆瓣的首页——即关注的人的广播页面。设计是用自定义的 UITableView  展示。今天学习下 Table View 的自定义。暂时没有用代码实现，继续用 storyboard。&lt;/p&gt;
&lt;p&gt;参考材料：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;官方文档：&lt;a href="https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/TableView_iPhone/AboutTableViewsiPhone/AboutTableViewsiPhone.html"&gt;Table View Programming Guide for iOS&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;iOS Programming The Big Nerd Ranch Guide 4th Edition&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;官方文档：&lt;a href="https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/index.html#//apple_ref/doc/uid/TP40006556"&gt;iOS Human Interface Guidelines&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;I 基础知识&lt;/h2&gt;
&lt;p&gt;两种基本的形式：&lt;code&gt;plain&lt;/code&gt; 和 &lt;code&gt;grouped&lt;/code&gt;，前者是不可分割的列表，后者有分离的 sections。&lt;/p&gt;
&lt;p&gt;使用 cell 画出，即 &lt;code&gt;UITableViewCell&lt;/code&gt; 类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;默认的四个 cell 的 style：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;typedef enum {
    UITableViewCellStyleDefault,
    UITableViewCellStyleValue1,
    UITableViewCellStyleValue2,
    UITableViewCellStyleSubtitle
} UITableViewCellStyle;&lt;/code&gt;
  * 两个需要 data source 的方法：列表的数量、某个 index 处的 cell（&lt;code&gt;tableView:cellForRowAtIndexPath:&lt;/code&gt;）
  * 配置 cell 的内容，在 &lt;code&gt;tableView:cellForRowAtIndex:&lt;/code&gt; 里面。
  * 复用某个 cell，可以用方法 &lt;code&gt;dequeueReusableCellWithIdentifier:&lt;/code&gt;
  * 修改某个 cell 的外观和动作，用代理。在代理方法 &lt;code&gt;tableView:willDisplayCell:forRowAtIndexPath:&lt;/code&gt; 中设置背景等属性，这个方法可以进行 cell 显示出前最后的更改，这个方法中只能进行被 table view 之前就设置好的与状态相关的属性，内容不应该在这里设置。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;自定义 cell 内容&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;两种方法：&lt;ol&gt;
&lt;li&gt;为 cell 的内容 view 加 subviews &lt;/li&gt;
&lt;li&gt;自定义一个 &lt;code&gt;UITableViewCell&lt;/code&gt; 的子类&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;待续……&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="iOS"></category><category term="UI"></category><category term="客户端开发"></category></entry><entry><title>Bye 2014! Hello 2015!</title><link href="/my-2014-review.html" rel="alternate"></link><published>2015-01-08T10:39:00+00:00</published><updated>2015-01-08T10:39:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2015-01-08:/my-2014-review.html</id><summary type="html">&lt;p&gt;2014 过去了，这一年于我来说似乎没有太大的印象。本命年对我的影响似乎不大，但是着实也不小。我不知今年究竟是幸运更多，抑或是不幸更多。但是比起 2013 年，已然是平淡安稳的一年。&lt;/p&gt;
&lt;p&gt;过去的这一年中，我并没有太多的关注自己的技术发展。当初选择 Java 是因为当初恰巧有这样的入行的机遇，而且 Java 又机会比较多、技术相对学过 C 的我来说比较简单。如今算是大半只脚踏入了互联网行业，但是始终工作没有我理想中的那么开心和自如。这一年半做数据项目的时间中，快乐的时间太少。我自然知道未来数据的重要性，数据工作人员的职业发展潜力会很大。但是当初做程序员，我只是希望可以做出有趣的东西，如今这份工作实在谈不上“有趣”，除了和测试妹子们以外，与人的交流也太少，我深深的感觉到自己已经快要长毛了。而且组里给我的机会太少，不知是不是因为我是女生的关系。年中时我看了一些 Android 开发的资料，最终没有下定决心转做移动客户端。最后压垮骆驼的稻草则是，一贯比较自由的公司竟然宣布施行 “996制度”。对魅族深深的失望、对珠海的落后的反感，我终于还是下定了决心不再做 Java 了，也不想再留在魅族 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;2014 过去了，这一年于我来说似乎没有太大的印象。本命年对我的影响似乎不大，但是着实也不小。我不知今年究竟是幸运更多，抑或是不幸更多。但是比起 2013 年，已然是平淡安稳的一年。&lt;/p&gt;
&lt;p&gt;过去的这一年中，我并没有太多的关注自己的技术发展。当初选择 Java 是因为当初恰巧有这样的入行的机遇，而且 Java 又机会比较多、技术相对学过 C 的我来说比较简单。如今算是大半只脚踏入了互联网行业，但是始终工作没有我理想中的那么开心和自如。这一年半做数据项目的时间中，快乐的时间太少。我自然知道未来数据的重要性，数据工作人员的职业发展潜力会很大。但是当初做程序员，我只是希望可以做出有趣的东西，如今这份工作实在谈不上“有趣”，除了和测试妹子们以外，与人的交流也太少，我深深的感觉到自己已经快要长毛了。而且组里给我的机会太少，不知是不是因为我是女生的关系。年中时我看了一些 Android 开发的资料，最终没有下定决心转做移动客户端。最后压垮骆驼的稻草则是，一贯比较自由的公司竟然宣布施行 “996制度”。对魅族深深的失望、对珠海的落后的反感，我终于还是下定了决心不再做 Java 了，也不想再留在魅族、甚至是珠海。感恩节时便去香港买了一台 MBP，开始努力的学习 iOS 开发。哎，让我感慨的是，自己一直不愿做前端，一直想挑战自己，可是最终还是做了前端呀……💔&lt;/p&gt;
&lt;p&gt;原本想换一份工作，继续一边做着 Java 一边学习 iOS 开发，于是试探性的投了简历。但是发现自己面试比较差。以前面试销售类、策划类等工作，我都是逢面必过的面霸，但是在技术面试上我都做得太差。原本以为是因为自己的确技术水平太差，后来我才明白原来技术面试这东西和大学期末考试是一样的，如果要找工作，还是需要疯狂的刷题和准备。什么都不看轻装上阵，有几个大牛能背得下来不常用的那些技术的概念？公司内工作五年的程序员姐姐，技术和经验其实也并没有比我高多少呀！自己的水平固然还是需要提高，基础需要打牢，但是面试的准备也必不可少！&lt;/p&gt;
&lt;p&gt;关于个人生活，我只能说谈恋爱是件让人崩溃的事。原本在 2014 的前几个月，我每天中午都在坚持自学德语、晚上跑步锻炼身体，生活也很开心。但是自从谈了恋爱，我就再也找不到这种平衡了。2015 年，学会平衡自我也是重中之重。过去的一年中，我对父母的关注似乎也太少，新的一年中我也要学会承担自己做一个女儿的责任。&lt;/p&gt;
&lt;p&gt;关于今年的计划，我想主要就是一点——换职业吧。争取在上半年内找到一份满意的 iOS 开发的工作，年底前可以做到轻松搞定工作。2016 年提薪时做到月薪可以按“万”计。嗯，明年对于个人发展将是关键的一年！&lt;/p&gt;
&lt;p&gt;女朋友和我一点也不一样，总是为了暂时的多挣一点点钱就去做自己并不擅长、不开心的、更没有发展前途的事，也没有什么职业规划，我总是觉得她这样的选择是越走越错的，这样的选择既不会有快乐、也不会有什么经济提高。但是也无法撼动她。再听她说她妈妈，也是……唉……&lt;/p&gt;
&lt;p&gt;越来越觉得生活真是不易，有这么多烦恼；人也真的是渺小，太多事情都无能为力。&lt;/p&gt;
&lt;p&gt;所以，新的一年，我应该将自己心思的 80% 放在自己努力就可以改变的事情上（比如好好工作、提升技术、锻炼身体、培养个人爱好、多交朋友等）、15% 多用技巧&lt;strong&gt;引导&lt;/strong&gt;自己难以改变的事情上（比如对女朋友更好一点让她知道到底谁才是真的爱她、多鼓励她在思想上慢慢改变她）、5% 甚至更少的时间去忧虑。&lt;/p&gt;
&lt;p&gt;我的 2015 年的关键词将是——平衡、飞升［感觉要得道成仙了呢 (´･Д･)」］！&lt;/p&gt;</content><category term="工作总结"></category><category term="日记"></category></entry><entry><title>iOS-开发学习日记-20141209</title><link href="/learning-iOS-20141209.html" rel="alternate"></link><published>2014-12-09T13:15:00+00:00</published><updated>2014-12-09T13:15:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2014-12-09:/learning-iOS-20141209.html</id><summary type="html">&lt;h1&gt;I.《马上着手开发 iOS 应用程序 (Start Developing iOS Apps Today)》&lt;/h1&gt;
&lt;p&gt;使用系统 OS X 10.10，Xcode 6.1.1 进行开发学习，教程中有遗漏的点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Introduction&lt;/code&gt; —&amp;gt; &lt;code&gt;Tutorial: Basics&lt;/code&gt; 中，Xcode 6.1.1 缺少的 &lt;code&gt;Empty Application&lt;/code&gt; 模版可以在这里进行下载：&lt;a href="https://github.com/cDigger/AddMissingTemplates"&gt;the Missing Templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;串联图（Storyboard）&lt;/code&gt;步骤中，Xcode 6 中会出现按照教程中步骤创建完 Storyboard 无法启动模拟器、程序 crash 掉的现象，新创建的这个串联图也并没有教程中所说的“箭头”产生。这是因为默认新创建的 …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h1&gt;I.《马上着手开发 iOS 应用程序 (Start Developing iOS Apps Today)》&lt;/h1&gt;
&lt;p&gt;使用系统 OS X 10.10，Xcode 6.1.1 进行开发学习，教程中有遗漏的点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Introduction&lt;/code&gt; —&amp;gt; &lt;code&gt;Tutorial: Basics&lt;/code&gt; 中，Xcode 6.1.1 缺少的 &lt;code&gt;Empty Application&lt;/code&gt; 模版可以在这里进行下载：&lt;a href="https://github.com/cDigger/AddMissingTemplates"&gt;the Missing Templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;串联图（Storyboard）&lt;/code&gt;步骤中，Xcode 6 中会出现按照教程中步骤创建完 Storyboard 无法启动模拟器、程序 crash 掉的现象，新创建的这个串联图也并没有教程中所说的“箭头”产生。这是因为默认新创建的 storyboard 没有将其设置为初始的视图控制器。解决方法是：在右侧的工具窗中选择 &lt;code&gt;Show the Attributes inspector&lt;/code&gt;，勾选窗体中 &lt;code&gt;View Controller&lt;/code&gt; 栏目下的 &lt;code&gt;Is Initial View Controller&lt;/code&gt;，此时可以看到控制器右侧可以出现箭头。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;iPhone 6 发布后，iOS 应用出现了更多不同的屏幕大小、分辨率。此时 Xcode 已经不再单纯的仅仅默认添加一个长方形的 View Controller 在串联图中。按照教程上面的步骤将 &lt;code&gt;View Controller&lt;/code&gt; 组件拖入串联图界面中，发现我们创建的 View 是正方形的，运行模拟器后发现 iPhone 6 的模拟器只能勉强显示图的左半边。原因是新的 iOS 系统使用更加复杂的 &lt;code&gt;Size classes&lt;/code&gt; 类来设置应用 View 的大小。解决方法：在 &lt;code&gt;Show the Size inspector&lt;/code&gt; 中自行调整 View Controller 的大小。如果你仅仅想按照此教程简单的过一遍，用回原来的长方形组件，那么可以在 &lt;code&gt;Show the File inspector&lt;/code&gt; 中，取消勾选 &lt;code&gt;Interface Builder Document&lt;/code&gt; 栏目下 &lt;code&gt;Use Size Classes&lt;/code&gt; 选项，此时组件变回长方形。但是由于 &lt;code&gt;View as&lt;/code&gt; 选项中可以看到它是基于 iOS 7 的，在 iPhone 6 设备/模拟器上面依然无法符合屏幕的尺寸，我们可以选择 iPhone 5s 的模拟器来运行此项目，此时我们的app就可以显示的比较完美了。更多适配尺寸的介绍，参考以下苹果官方文档：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/LayoutandAppearance.html"&gt;iOS Human Interface Guidelines -- Adaptivity and Layout&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/ios/recipes/xcode_help-IB_adaptive_sizes/_index.html"&gt;Size Classes Design Help&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="iOS"></category><category term="笔记"></category><category term="学习"></category></entry><entry><title>Redis学习笔记</title><link href="/learn-redis.html" rel="alternate"></link><published>2014-11-12T22:56:00+00:00</published><updated>2014-11-12T22:56:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2014-11-12:/learn-redis.html</id><summary type="html">&lt;h2&gt;Redis 介绍&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Redis 是一种“key-value”的存储，通常被当做一个NoSQL数据库&lt;/li&gt;
&lt;li&gt;原子操作：&lt;code&gt;INCR&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;基本操作&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SET&lt;/code&gt; 负责&lt;strong&gt;永久&lt;/strong&gt;存储一个数值在指定的键上；&lt;code&gt;SETNX&lt;/code&gt; = set if key not exit：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;shell
    SET key some-value&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GET&lt;/code&gt; 负责读取一个键对应的值：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;shell
    GET key&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;DEL&lt;/code&gt; 操作删除一个key；&lt;code&gt;INCR&lt;/code&gt; 自增&lt;/li&gt;
&lt;li&gt;&lt;code&gt;EXPIRE&lt;/code&gt; 定时过期：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;shell
    EXPIRE key second&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;TTL&lt;/code&gt; 过期前的剩余时间，返回值是-2则表示key已不存在，-1表示永远不会过期。如果 &lt;code&gt;SET&lt;/code&gt; 了key，它的 &lt;code&gt;TTL&lt;/code&gt; 会被重置：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Redis 介绍&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Redis 是一种“key-value”的存储，通常被当做一个NoSQL数据库&lt;/li&gt;
&lt;li&gt;原子操作：&lt;code&gt;INCR&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;基本操作&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SET&lt;/code&gt; 负责&lt;strong&gt;永久&lt;/strong&gt;存储一个数值在指定的键上；&lt;code&gt;SETNX&lt;/code&gt; = set if key not exit：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;shell
    SET key some-value&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GET&lt;/code&gt; 负责读取一个键对应的值：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;shell
    GET key&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;DEL&lt;/code&gt; 操作删除一个key；&lt;code&gt;INCR&lt;/code&gt; 自增&lt;/li&gt;
&lt;li&gt;&lt;code&gt;EXPIRE&lt;/code&gt; 定时过期：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;shell
    EXPIRE key second&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;TTL&lt;/code&gt; 过期前的剩余时间，返回值是-2则表示key已不存在，-1表示永远不会过期。如果 &lt;code&gt;SET&lt;/code&gt; 了key，它的 &lt;code&gt;TTL&lt;/code&gt; 会被重置：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shell
    TTL key&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="redis"></category><category term="NoSQL"></category><category term="笔记"></category><category term="学习"></category><category term="后端开发"></category></entry><entry><title>MySQL中NULL与空值的区别</title><link href="/difference-between-null-and-empty-in-mysql.html" rel="alternate"></link><published>2014-11-07T18:57:00+00:00</published><updated>2014-11-07T18:57:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2014-11-07:/difference-between-null-and-empty-in-mysql.html</id><summary type="html">&lt;p&gt;昨天在工作时，出现一个问题：数据库中建表某个字段规定为&lt;code&gt;NOT NULL&lt;/code&gt;的，但是插入的相应字段的字符串为&lt;code&gt;""&lt;/code&gt;时候，直接插入数据库中，而没有禁止插入。&lt;/p&gt;
&lt;p&gt;在网上查了一下，发现在MySQL中，&lt;code&gt;NULL&lt;/code&gt;（空）与 &lt;code&gt;""&lt;/code&gt;意义并不相同：&lt;/p&gt;
&lt;!--more--&gt;

&lt;ul&gt;
&lt;li&gt;StackOverFlow.com上相关问题 &lt;a href="http://stackoverflow.com/questions/1267999/mysql-better-to-insert-null-or-empty-string"&gt;"MySQL, better to insert NULL or empty string?"&lt;/a&gt; 高票答案：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用&lt;code&gt;NULL&lt;/code&gt;可以区分“没有输入数据”和“输入空数据”， 差异在于：
  + &lt;code&gt;NULL&lt;/code&gt;的长度就是&lt;code&gt;NULL&lt;/code&gt;，空字符串的长度为&lt;code&gt;0&lt;/code&gt;
  + 一串&lt;code&gt;NULL&lt;/code&gt;数据比空字符串优先排序
  + &lt;code&gt;COUNT(message)&lt;/code&gt;会将空字符串计数进去，但是不会将&lt;code&gt;NULL&lt;/code&gt;数据们计入
  + 可以使用绑定变量搜索某个空字符串，但是不可以这样搜索 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;昨天在工作时，出现一个问题：数据库中建表某个字段规定为&lt;code&gt;NOT NULL&lt;/code&gt;的，但是插入的相应字段的字符串为&lt;code&gt;""&lt;/code&gt;时候，直接插入数据库中，而没有禁止插入。&lt;/p&gt;
&lt;p&gt;在网上查了一下，发现在MySQL中，&lt;code&gt;NULL&lt;/code&gt;（空）与 &lt;code&gt;""&lt;/code&gt;意义并不相同：&lt;/p&gt;
&lt;!--more--&gt;

&lt;ul&gt;
&lt;li&gt;StackOverFlow.com上相关问题 &lt;a href="http://stackoverflow.com/questions/1267999/mysql-better-to-insert-null-or-empty-string"&gt;"MySQL, better to insert NULL or empty string?"&lt;/a&gt; 高票答案：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用&lt;code&gt;NULL&lt;/code&gt;可以区分“没有输入数据”和“输入空数据”， 差异在于：
  + &lt;code&gt;NULL&lt;/code&gt;的长度就是&lt;code&gt;NULL&lt;/code&gt;，空字符串的长度为&lt;code&gt;0&lt;/code&gt;
  + 一串&lt;code&gt;NULL&lt;/code&gt;数据比空字符串优先排序
  + &lt;code&gt;COUNT(message)&lt;/code&gt;会将空字符串计数进去，但是不会将&lt;code&gt;NULL&lt;/code&gt;数据们计入
  + 可以使用绑定变量搜索某个空字符串，但是不可以这样搜索&lt;code&gt;NULL&lt;/code&gt;，例如：
    &lt;code&gt;SQL
        SELECT * 
        FROM mytable
        WHERE mytext = ?&lt;/code&gt;
    mytext永远不可能匹配&lt;code&gt;NULL&lt;/code&gt;值，无论你从客户端如何传值。匹配&lt;code&gt;NULL&lt;/code&gt;的方法只能这样查询：
    &lt;code&gt;SQL
        SELECT * 
        FROM mytable 
        WHERE mytext IS NULL&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://dev.mysql.com/doc/refman/5.0/en/working-with-null.html"&gt;MySQL Manual (5.0版本)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;测试&lt;code&gt;NULL&lt;/code&gt;需要用&lt;code&gt;IS NULL&lt;/code&gt;或者&lt;code&gt;IS NOT NULL&lt;/code&gt;；&lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;等与&lt;code&gt;NULL&lt;/code&gt;的计算比较，结果仍然为&lt;code&gt;NULL&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;MySQL中，&lt;code&gt;0&lt;/code&gt;或&lt;code&gt;NULL&lt;/code&gt;表示假，任何其他的值表示真。默认布尔操作的真值为&lt;code&gt;1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;GROUP BY&lt;/code&gt;操作中，两个&lt;code&gt;NULL&lt;/code&gt;被认为是相等的；并且&lt;code&gt;NULL&lt;/code&gt;值在&lt;code&gt;ORDER BY ... ASC&lt;/code&gt;中第一个显示，而在&lt;code&gt;DESC&lt;/code&gt;中则是最后一个&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="MySQL"></category><category term="数据库"></category><category term="Database"></category><category term="DB"></category></entry><entry><title>Programming Hive 笔记 (I)</title><link href="/notes-of-programming-hive-1.html" rel="alternate"></link><published>2014-11-03T22:41:00+00:00</published><updated>2014-11-03T22:41:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2014-11-03:/notes-of-programming-hive-1.html</id><summary type="html">&lt;h2&gt;I. Hive介绍&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Hadoop中，有一个计算系统MapReduce，将计算任务分解到集群中的服务器上计算，这样可以更有效率的处理大数据的计算；计算系统下面有一个分布式文件系统（HDFS）。那么问题来了：&lt;blockquote&gt;
&lt;p&gt;怎样把已有的建立在关系型数据库上面的、使用SQL的数据结构，迁移到Hadoop上面呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;答案：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;HIVE! &lt;/p&gt;
&lt;/blockquote&gt;
&lt;!--more--&gt;

&lt;ul&gt;
&lt;li&gt;Hive使用大家都熟悉的类SQL语言从Hadoop集群中查询数据，让使用者把注意力都放在查询上，而不是其他方面&lt;/li&gt;
&lt;li&gt;适合使用Hive的场景：数据仓储应用中——相对静态的数据被分析，不要求快速回应，数据没有频繁的变化&lt;/li&gt;
&lt;li&gt;Hive不是完整的数据库。Hive的功能被Hadoop和HDFS的限制所限制。&lt;/li&gt;
&lt;li&gt;Hive不提供一条纪录水平上的update、insert、delete。可以通过查询生成新的表，或者导出查询结果到文件&lt;/li&gt;
&lt;li&gt;因为Hadoop是面向批处理的系统，Hive查询延迟更高（因为MapReduce的开销），再小的数据集，Hive查询相比传统DB也要花费更长的时间&lt;/li&gt;
&lt;li&gt;Hive不提供事务&lt;/li&gt;
&lt;/ul&gt;</summary><content type="html">&lt;h2&gt;I. Hive介绍&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Hadoop中，有一个计算系统MapReduce，将计算任务分解到集群中的服务器上计算，这样可以更有效率的处理大数据的计算；计算系统下面有一个分布式文件系统（HDFS）。那么问题来了：&lt;blockquote&gt;
&lt;p&gt;怎样把已有的建立在关系型数据库上面的、使用SQL的数据结构，迁移到Hadoop上面呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;答案：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;HIVE! &lt;/p&gt;
&lt;/blockquote&gt;
&lt;!--more--&gt;

&lt;ul&gt;
&lt;li&gt;Hive使用大家都熟悉的类SQL语言从Hadoop集群中查询数据，让使用者把注意力都放在查询上，而不是其他方面&lt;/li&gt;
&lt;li&gt;适合使用Hive的场景：数据仓储应用中——相对静态的数据被分析，不要求快速回应，数据没有频繁的变化&lt;/li&gt;
&lt;li&gt;Hive不是完整的数据库。Hive的功能被Hadoop和HDFS的限制所限制。&lt;/li&gt;
&lt;li&gt;Hive不提供一条纪录水平上的update、insert、delete。可以通过查询生成新的表，或者导出查询结果到文件&lt;/li&gt;
&lt;li&gt;因为Hadoop是面向批处理的系统，Hive查询延迟更高（因为MapReduce的开销），再小的数据集，Hive查询相比传统DB也要花费更长的时间&lt;/li&gt;
&lt;li&gt;Hive不提供事务&lt;/li&gt;
&lt;/ul&gt;</content><category term="Hive"></category><category term="笔记"></category><category term="学习"></category></entry><entry><title>一周总结</title><link href="/my-last-week-review.html" rel="alternate"></link><published>2014-03-09T02:06:00+00:00</published><updated>2014-03-09T02:06:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2014-03-09:/my-last-week-review.html</id><summary type="html">&lt;p&gt;很晚了，我快速的总结下。&lt;/p&gt;
&lt;p&gt;总体来说这周并没有上一周那么专注。上一周可以随时背单词，并且中午学习德语，而且可以专注在自己的项目上很长时间，这周更容易走神，刷网页也比较多。可惜现在必须要熟悉自己的手机，不然我还是更喜欢用原来那个诺基亚的黑白机来抵制自己浪费时间。&lt;/p&gt;
&lt;p&gt;工作不是太忙，所以多了很多时间看b3log的代码。我还是选择去看GAE部分的代码了。b3log用的是他们自己开发的类似Spring MVC的latke框架，并且用了FreeMarker做render渲染前端。这一周我大致明白了这个程序的结构，同时通过看b3log和latke的源代码学习到了不少东西。它们的代码都很漂亮，构架并不复杂很清晰，逻辑性挺强的。通过它和自己手头目前仅有的bi项目和曾经接触过的FM web，感觉自己越来越进步了。&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;所以还是要多看代码、自己多写。下面一周就不能再只是看代码了，要开始开发了。&lt;/p&gt;
&lt;p&gt;看了一下，如果要重新改进它的MarkDown编辑器，主要还是在排版CSS上面下功夫，如果重新写一个编辑器，可能也是用JS基于已有的开源编辑器开发，我并不是前端，不知道究竟是不是要花精力去搞这个东西。毕竟现在我后端的东西还不太扎实，还有太多要学习的。但是前端毕竟只是一个过渡性的职业，未来一定不仅仅分前后端的，我要都会才行呀，不如就慢慢学吧。买了一本《写给大家看的设计书》。&lt;/p&gt;
&lt;p&gt;唉，做“全栈工程师”还有太长太长的路要走，现在我只是武侠游戏中刚刚走出山村里面家门的主人公，只有生砍这个招数，想要成为武林中有名声的人物 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;很晚了，我快速的总结下。&lt;/p&gt;
&lt;p&gt;总体来说这周并没有上一周那么专注。上一周可以随时背单词，并且中午学习德语，而且可以专注在自己的项目上很长时间，这周更容易走神，刷网页也比较多。可惜现在必须要熟悉自己的手机，不然我还是更喜欢用原来那个诺基亚的黑白机来抵制自己浪费时间。&lt;/p&gt;
&lt;p&gt;工作不是太忙，所以多了很多时间看b3log的代码。我还是选择去看GAE部分的代码了。b3log用的是他们自己开发的类似Spring MVC的latke框架，并且用了FreeMarker做render渲染前端。这一周我大致明白了这个程序的结构，同时通过看b3log和latke的源代码学习到了不少东西。它们的代码都很漂亮，构架并不复杂很清晰，逻辑性挺强的。通过它和自己手头目前仅有的bi项目和曾经接触过的FM web，感觉自己越来越进步了。&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;所以还是要多看代码、自己多写。下面一周就不能再只是看代码了，要开始开发了。&lt;/p&gt;
&lt;p&gt;看了一下，如果要重新改进它的MarkDown编辑器，主要还是在排版CSS上面下功夫，如果重新写一个编辑器，可能也是用JS基于已有的开源编辑器开发，我并不是前端，不知道究竟是不是要花精力去搞这个东西。毕竟现在我后端的东西还不太扎实，还有太多要学习的。但是前端毕竟只是一个过渡性的职业，未来一定不仅仅分前后端的，我要都会才行呀，不如就慢慢学吧。买了一本《写给大家看的设计书》。&lt;/p&gt;
&lt;p&gt;唉，做“全栈工程师”还有太长太长的路要走，现在我只是武侠游戏中刚刚走出山村里面家门的主人公，只有生砍这个招数，想要成为武林中有名声的人物，还是要积累很久的。而我还是很笨的那种，大概是郭靖这样的吧！怎么学都进步的很慢。但是着急也没有用呀，一步步的来吧，虽然走得很慢，但是时间长还是可以走出很远的一段路的！&lt;/p&gt;
&lt;p&gt;说到这个，现在我的项目带我的前辈要去做别的项目了，虽然还会来新的人接手，但是想到暂时这段时间这个项目可能就只有我在负责了，我很没有信心，有点恐慌。但是这样才可以更好的进步呀。鼓起勇气踏上征程把少女！&lt;/p&gt;</content><category term="工作总结"></category><category term="日记"></category></entry><entry><title>妇女节GDG DevFestW行简要记录</title><link href="/gdg-devfest-woman.html" rel="alternate"></link><published>2014-03-09T02:00:00+00:00</published><updated>2014-03-09T02:00:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2014-03-09:/gdg-devfest-woman.html</id><summary type="html">&lt;p&gt;迎着春日依旧料峭潮湿的寒风，我昨日踏进到了位于拱北区域的金山公司的大门。之前在公司内部论坛看到了同事分享的GDG（谷歌开发者社区）珠海针对妇女节的活动（Dev Fest W），于是周六早上我便拉上还没有毕业的实习生妹子一起赶去了。&lt;/p&gt;
&lt;p&gt;珠海并不像北上广深杭那样有着浓厚的互联网氛围，有GDG珠海的分组，让我很是惊讶。到了才知道，珠海group成立还不到两年，牵头人是金山公司里一个有趣的开发者。半个多小时以后，人陆陆续续的来了一部分，大家签到后都落了座，活动也就这样开始了。&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;一番对组织和活动的简单介绍后，第一位“讲师”上台了。这是一个很漂亮的姑娘，也是金山的内部员工。她毕业后做过测试，后面转了岗位，做了HR，现在负责员工的培训。我了解到这个环节应该是讲职业规划，也有心听一听过来人的经验之谈。没想到现场调查时，全场几十个男生和女生中，大部分都是大学生，更有不少是大一大二的，而像我一样已经工作的寥寥无几。顿时心中有点讶异和少许的失落。接下来的讲座，讲师并没有谈太多IT业的职业规划，而是更针对“要有职业规划和目标”这个话题展开了略显冗长的论述。&lt;/p&gt;
&lt;p&gt;在她谈到“对未来有目标”时，她提了一个问题：“未来这几年你有什么规划，愿意分享下吗？”在座的没有任何一个人应答，于是我想了下 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;迎着春日依旧料峭潮湿的寒风，我昨日踏进到了位于拱北区域的金山公司的大门。之前在公司内部论坛看到了同事分享的GDG（谷歌开发者社区）珠海针对妇女节的活动（Dev Fest W），于是周六早上我便拉上还没有毕业的实习生妹子一起赶去了。&lt;/p&gt;
&lt;p&gt;珠海并不像北上广深杭那样有着浓厚的互联网氛围，有GDG珠海的分组，让我很是惊讶。到了才知道，珠海group成立还不到两年，牵头人是金山公司里一个有趣的开发者。半个多小时以后，人陆陆续续的来了一部分，大家签到后都落了座，活动也就这样开始了。&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;一番对组织和活动的简单介绍后，第一位“讲师”上台了。这是一个很漂亮的姑娘，也是金山的内部员工。她毕业后做过测试，后面转了岗位，做了HR，现在负责员工的培训。我了解到这个环节应该是讲职业规划，也有心听一听过来人的经验之谈。没想到现场调查时，全场几十个男生和女生中，大部分都是大学生，更有不少是大一大二的，而像我一样已经工作的寥寥无几。顿时心中有点讶异和少许的失落。接下来的讲座，讲师并没有谈太多IT业的职业规划，而是更针对“要有职业规划和目标”这个话题展开了略显冗长的论述。&lt;/p&gt;
&lt;p&gt;在她谈到“对未来有目标”时，她提了一个问题：“未来这几年你有什么规划，愿意分享下吗？”在座的没有任何一个人应答，于是我想了下，举起手来，正如我一如既往的风格。我给大家大略的讲了讲自己选择做一名开发的心路历程，并且谈了下未来三年的计划，最后讲了讲自己在入行时候遇到的问题与困难以及寻找到的解决方案。我不知道我说的这些话在座的学生们是否真的听懂了，也不知道对他们有什么帮助没有。但是在讲师讲完了的答疑环节时同学们提出的那些问题，我明白他们还是没有明白我说的意思。&lt;/p&gt;
&lt;p&gt;接下来是四个金山工作的女性——年轻的UI设计师、工作了几年的HR、测试的一个leader——进行“圆桌访谈”，话题是“七年前你最遗憾的是什么？这些困难和遗憾你后来怎样解决的？对在座的听众的建议是什么？”并集体解答大家的疑问。&lt;/p&gt;
&lt;p&gt;中午我们在金山办公楼一层的一个武侠客栈风格的餐厅吃了pizza，合了影。然后我们几个人便偷偷“潜入”金山的办公楼参观了一番。&lt;/p&gt;
&lt;p&gt;下午开始，我们使用google+连线了印度新德里与北京的活动现场，进行分享。由于网络状况和印度口音的缘故，大家一句都没有听懂新德里小伙伴们的分享内容。我们的分享则是金山WPS的开发女生，分享手机端的WPS的功能（其实就是一个广告），她的英语也很成问题，所以我想，其实大家应该都没有听懂彼此的话吧！但是奇特的是，印度那边竟然有个女生踢了问题，问我们这个app的开发环境是什么。分享人说主要是在windows下也有linux。我听到这个问题就明白了，她们其实也没有听懂，所以问了一个这样的问题。&lt;/p&gt;
&lt;p&gt;纠结的连接环节结束后，让我很感兴趣的环节开始了！一个男生过来分享他们的可穿戴设备，我们不仅仅看到了快要烂大街的jawbone，还看到了许多国内厂商让人激动的设备！比如智能插座、智能体重计、可以自主学习集成所有红外遥控功能到智能手机的红外遥控接收器、以及下面这幅图上的这个东西——可以将手机上的音乐直接发送到任何音响设备播放的小玩意，而不需非要配套的蓝牙音箱。&lt;/p&gt;
&lt;p&gt;&lt;img alt="智能音箱" src="http://m1.img.srcdd.com/farm4/d/2014/0309/21/CD5FF9225C0ED68820448BA0FD6A3934_B500_900_500_666.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;接着是一个在金山做运营的姑娘，和我们分享她玩的“玩具”——你懂的，Lego呀！还有其他纸模之类的玩具，但是那些哪有乐高有趣呢？之前我一直不明白为什么国外这么多geek们都从小这么热爱乐高玩具，我原以为它只是积木罢了。现在才明白原来这个可以进行简单的模块化编程而动起来的小机器人才是它的有趣之处！轻轻松松就可以体验到制作机器人的乐趣，谁不感兴趣呢？我们几个的内心中又燃起了熊熊的技术之火！特别是身边的专业本是电子的实习生妹子和她带来的大三学妹。&lt;/p&gt;
&lt;p&gt;&lt;img alt="金山妹子的乐高机器人" src="http://m2.img.srcdd.com/farm5/d/2014/0309/22/1B16812FC300220E89680480301FAB70_B500_900_500_666.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;后面就是是一个没什么意义的环节，是一个落入玫琳凯传销的女人给我们讲打扮。殊不知我们行业不需要穿职业装，对化妆也是无所谓的。身边的两个妹子都是比办公室里面男同胞们还帅（另外吐槽个：再这样下去没有帅哥只有帅姑娘，我可就要掰弯了啊喂）的造型，自然对这个话题嗤之以鼻；而我一直不觉得我们行业的姑娘形象有什么大问题，反而因为这个行业男性气息太重，姑娘们一个个的都自己都很重视装扮。所以我们就提前走了。&lt;/p&gt;
&lt;p&gt;总结下这一天的感想：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;学生们，特别是女生们，对于职业和未来的迷茫和恐慌比较明显，组织者针对这些问题的回答也并不能让我认同。这一点我后面会再写一篇专门的文章来说。&lt;/li&gt;
&lt;li&gt;保持对技术的兴趣很重要。大部分技术人士，还是需要参与到社区里面的，不管是真实的社区还是虚拟社区，开阔自己的思维和见识，而不仅仅只看到自己工作的那一小块东西，而看到世界上网络中正在进行的剧变。实习生妹子的学妹高考时选择电子就是出于兴趣，但是在学校渐渐的忘记了这种兴趣，现在在为是否考研还是转换行业而烦恼。在参加完这个活动时，她说自己又感受到了这种对技术的热情和好奇心，同时在看到我们这些女性开发者后，也渐渐的坚定了自己考研的决定。&lt;/li&gt;
&lt;li&gt;互联网公司的品牌还是比较重要的，由于互联网行业的文化就是开放与分享，我们公司还是缺少这种精神。可能是原来黄章的分享精神被雷军给辜负了，所以就从此断了这个念想了。同时我也看到了公司内部还是有很多有这个精神的大牛们的，让人敬仰，也让我对公司稍微多了一些信心。&lt;/li&gt;
&lt;/ol&gt;</content><category term="GDG"></category><category term="谷歌开发者社区"></category><category term="Dev Fest"></category><category term="日记"></category></entry><entry><title>个人博客的初尝试</title><link href="/install-java-blog-platform.html" rel="alternate"></link><published>2014-02-27T01:47:00+00:00</published><updated>2014-02-27T01:47:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2014-02-27:/install-java-blog-platform.html</id><summary type="html">&lt;p&gt;从上周周末开始搭建自己的blog。选用国人使用Java开发的B3log开源博客系统，因为这样学习成本会小很多。到了昨天终于把它在本地tomcat+mysql环境上、以及GAE上搭建起来。&lt;/p&gt;
&lt;p&gt;&lt;img alt="B3log" src="http://m1.img.srcdd.com/farm4/d/2014/0227/12/061434D52774A2BBAD4DD2DEBC332710_B500_900_153_56.png"&gt;&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;搭建本地tomcat环境时可参考他们给出的&lt;a href="https://docs.google.com/file/d/0BydqZRqXE5TUdF9nVlg4YjhsUVE/edit"&gt;官方文档&lt;/a&gt;，因为从github上面扒下来的项目的目录结构和平常的不太一样。&lt;/p&gt;
&lt;p&gt;本地GAE环境还没有搭建起来，因为GAE被墙了，一直在考虑要不要用它，不过BAE最近限制注册，也是个麻烦。服务器上面架设比较简单，直接把b3log的GAE文件夹下面web的文件夹下面的所有文件全部上传（或者打成war包上传）到GAE上自己的application下面（之前要改一下设置，见他们的&lt;a href="https://github.com/andiechu/b3log-solo/wiki"&gt;官方wiki&lt;/a&gt;）。&lt;/p&gt;
&lt;p&gt;接下来一周的计划：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;利用周末两天看完GAE的相关知识，搭建好本地的GAE环境；&lt;/li&gt;
&lt;li&gt;熟悉工程，以及他们自己开发的latke框架。&lt;/li&gt;
&lt;li&gt;如果时间够，改进一下或者直接重写一个MarkDown编辑器。前端很丑，但是编辑器好不好用还是很重要的呀。&lt;/li&gt;
&lt;/ul&gt;</summary><content type="html">&lt;p&gt;从上周周末开始搭建自己的blog。选用国人使用Java开发的B3log开源博客系统，因为这样学习成本会小很多。到了昨天终于把它在本地tomcat+mysql环境上、以及GAE上搭建起来。&lt;/p&gt;
&lt;p&gt;&lt;img alt="B3log" src="http://m1.img.srcdd.com/farm4/d/2014/0227/12/061434D52774A2BBAD4DD2DEBC332710_B500_900_153_56.png"&gt;&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;搭建本地tomcat环境时可参考他们给出的&lt;a href="https://docs.google.com/file/d/0BydqZRqXE5TUdF9nVlg4YjhsUVE/edit"&gt;官方文档&lt;/a&gt;，因为从github上面扒下来的项目的目录结构和平常的不太一样。&lt;/p&gt;
&lt;p&gt;本地GAE环境还没有搭建起来，因为GAE被墙了，一直在考虑要不要用它，不过BAE最近限制注册，也是个麻烦。服务器上面架设比较简单，直接把b3log的GAE文件夹下面web的文件夹下面的所有文件全部上传（或者打成war包上传）到GAE上自己的application下面（之前要改一下设置，见他们的&lt;a href="https://github.com/andiechu/b3log-solo/wiki"&gt;官方wiki&lt;/a&gt;）。&lt;/p&gt;
&lt;p&gt;接下来一周的计划：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;利用周末两天看完GAE的相关知识，搭建好本地的GAE环境；&lt;/li&gt;
&lt;li&gt;熟悉工程，以及他们自己开发的latke框架。&lt;/li&gt;
&lt;li&gt;如果时间够，改进一下或者直接重写一个MarkDown编辑器。前端很丑，但是编辑器好不好用还是很重要的呀。&lt;/li&gt;
&lt;/ul&gt;</content><category term="Java"></category><category term="瞎鼓捣"></category></entry><entry><title>毕业两年总结展望（I）之事业：我是要做程序员的姑娘！</title><link href="/a-coder-destine-to-be.html" rel="alternate"></link><published>2014-02-22T01:34:00+00:00</published><updated>2014-02-22T01:34:00+00:00</updated><author><name>Andie Chu</name></author><id>tag:None,2014-02-22:/a-coder-destine-to-be.html</id><summary type="html">&lt;p&gt;过往的两年里发生了很多事。由于我已经慢慢丧失了写博客的习惯，因此很多东西也慢慢的被遗忘了。但是不能被遗忘的始终是大四和刚毕业大半年对未来和自我定位的失落和迷惘。如今距离那段日子已有快两年之久，生活也随着岁月的慢慢流逝而渐渐趋于稳定——当然了，对于我来说，是如滚滚长江中央一座磐石一样的稳定，而非四季如春的山谷中花朵般的稳定。在2014新年时，我就想做一下总结，但是一直却犹豫，今天或许可以写一下这一年中的历程。&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;刚刚毕业时，我怀揣着一个目前根本不可能实现的“梦想”，其实也是对自己的迷茫，回到北京。当我发现我就是在发梦时，我开始渐渐清醒，想那么就做一个公关吧！毕竟大学时候我也认真的为它投入过。当时面试了几家公司的实习生，只有P公司的digital组要了我。于是我就成为了国贸那边的一枚朝九晚六的小实习生。那段时间我工作的并不投入，渐渐的也看清楚了到底PR是什么，感觉不到这份职业有实质性的创造。在帮忙运营官方微博的时候，我开始觉得“无非就是这个样”，是的，杜蕾斯的微博、肯德基的人人，做的很成功，但是似乎又没创造出什么贡献。或许是我这个人太急功近利，看不到品牌维护和提升中，这些小动作到底做了多少贡献。但是在我看来的是，PR这种东西也是有某种曲线规律的，当公司自己的策略适当、自己的发展恰好到了那个时候，PR才会发出巨大的效果；但是当公司自己的策略都不得当时，PR做的功远远抵消不了公司自己产生的反作用效果。而且我也通过这些社交网络，看了很多人丑恶的一面，包括我自己 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;过往的两年里发生了很多事。由于我已经慢慢丧失了写博客的习惯，因此很多东西也慢慢的被遗忘了。但是不能被遗忘的始终是大四和刚毕业大半年对未来和自我定位的失落和迷惘。如今距离那段日子已有快两年之久，生活也随着岁月的慢慢流逝而渐渐趋于稳定——当然了，对于我来说，是如滚滚长江中央一座磐石一样的稳定，而非四季如春的山谷中花朵般的稳定。在2014新年时，我就想做一下总结，但是一直却犹豫，今天或许可以写一下这一年中的历程。&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;刚刚毕业时，我怀揣着一个目前根本不可能实现的“梦想”，其实也是对自己的迷茫，回到北京。当我发现我就是在发梦时，我开始渐渐清醒，想那么就做一个公关吧！毕竟大学时候我也认真的为它投入过。当时面试了几家公司的实习生，只有P公司的digital组要了我。于是我就成为了国贸那边的一枚朝九晚六的小实习生。那段时间我工作的并不投入，渐渐的也看清楚了到底PR是什么，感觉不到这份职业有实质性的创造。在帮忙运营官方微博的时候，我开始觉得“无非就是这个样”，是的，杜蕾斯的微博、肯德基的人人，做的很成功，但是似乎又没创造出什么贡献。或许是我这个人太急功近利，看不到品牌维护和提升中，这些小动作到底做了多少贡献。但是在我看来的是，PR这种东西也是有某种曲线规律的，当公司自己的策略适当、自己的发展恰好到了那个时候，PR才会发出巨大的效果；但是当公司自己的策略都不得当时，PR做的功远远抵消不了公司自己产生的反作用效果。而且我也通过这些社交网络，看了很多人丑恶的一面，包括我自己。就是那段时间，让我讨厌了微博这个东西，很长一段时间我都不愿意打开它。&lt;/p&gt;
&lt;p&gt;但是在作为实习生工作的过程中，我开始发现了自己的兴趣。我是个喜欢创造的人，我的想法很多，这就是为什么我喜欢做创意类工作。但是现在的工作，虽然每周的brainstorming很富有创造性，但是实际上真的“创造”的实际效果并不多（原因上一段我说了）。我的实习生工作包括每周对我们账号和对手账号各种信息的统计，光是微博往往一周就要有几十条，每条下面粉丝回复多则上十万，少则几十，要统计这些真的不容易。那个时候，作为一个工科女，我第一想到的就是，如果有一个app可以直接选择日期和账号就可以统计出我要的这些结果，那么多好呀！那个时候，其实编程真的都忘得差不多了，大学时候的编程也只是写算法，到后面只用MATLAB就好了，编程技术就更差了。深知自己不能短时间做到，但是我还是想为什么不去尝试呢？于是我买了一本The C Programming Language打算回顾一下以前的知识，每天挤地铁时候都在看，那个时候发现外文原版计算机教材果然是神物，也奠定了我此后阅读原版教材的漫漫之旅。后来又玩了一下codeacademy的python教程，感觉对编程越来越感兴趣了。后面告别了这个公司，其实我并没有认真的投入，除了上班时候工作，下班并没有再多付出过太多时间，但是却发现上司竟然还觉得我不错，而且上司是很nice的男生，在我走之前还帮我收集齐了但是肯德基的所有兔斯基玩具（yeah, judge me if you want）。当时还是很惭愧的，那时候就告诉自己一定要认真对待未来的每一份工作，担得起所有其他人对我的态度，不管是坏还是好。&lt;/p&gt;
&lt;p&gt;之所以想做一个程序员，《黑客与画家》对我也是一个影响因素。我很想做一个这样的“黑客”！但是我基本上就是零基础、零经验，哪个公司可以要我呢？后面一个很小的通讯公司刚开始招Java工程师，我当时一直都比较抗拒，但是去年春节时候，金老湿来北京看我，晚上我和他说了想法，他捧着我的脸跟我说了好多，开导了我的很多想法。总是要有个起点的！于是我去了。在这个公司用一周时间看了一本非常烂的Java书，摸清了的基础语法，并且欣喜地发现比曾经学的C++的OOP简单有逻辑多了（其实是我对C++没有逻辑），然后用swing写了一些TCP/UDP通讯的桌面应用。这段经历现在想想，走的十分正确，从而让我迅速的掌握了Java SE的基础语法。后面来了一个也是刚毕业的女生，但是她自己在Java EE的培训班学过，而且原来也实习过，所以经验还是有的，和她一起工作还挺快乐的挺和谐的。但是那时候我们公司并不是做Web应用，而是用Java做桌面的通讯应用，所以很多东西她也是第一次接触。这段时间每天就是9点多下班，周一到周六上班。其实也投入的并不多了，周日都休息过去了。那个时候拿着2000块钱一个月的工资，觉得自己真的是够失败的，每天也并不太开心。还好写完代码的时候看到成果的成就感还是挺足的，也不是太难过。&lt;/p&gt;
&lt;p&gt;工作了两个多月，到了快四月。某一天下班的时候，看到电梯里面的流动广告，有一则MZ的招聘“蓝天计划”广告。其实我当时对MZ的印象只有08年大一时候看到同学拿的挺山寨的做工和其他山寨货一样看起来挺垃圾的（当时我们用的都是ipod呀，做工差太远了）、但是在山寨货中又挺上档次的挺特别的，这一个印象。隐约中知道它们做手机（当时出的MX2），印象也是：“呼吸灯是他们搞的？挺有趣挺创新的嘛，不过还是挺山寨的，现在大家都做安卓机了么，都好山炮”。而且连名字我都觉得很山炮，听起来就是村里的，logo设计的也毫无美感。不过那个广告却和我的往常印象不一样，感觉挺高大上的，而且宣讲会地址竟然是在世贸天阶，还是专程来北京招徕人才的，并且配给工程师一万多人民币的椅子（这点很重要），看起来好像文化很开放而且对技术人员极其友好。不过我看了他们官网上面列出的招聘人才的标准，也深知自己并不合乎他们要求的人才，但是我这个人有一点很奇葩，我从来做事都凭着一股劲，我想就算不能去的话，去听听宣讲会也没什么呀！至少清楚他们都是什么样的。于是我那天就去了。没想到世贸天阶时尚廊是个很小资很小清新的书吧，现场气氛超好。其实我也听不太懂什么人才发展的计划，但是我感觉他们PPT做的还不错。后面让大家提问时候，我这个人又有了个毛病，就是我觉得参加讲座之类的，一定要想出个问题问一下出出风头，这个问题既不能太傻X又不能太偏题，才能显示出我的确思考过、而且我对他们讲的内容感兴趣，于是我就问了一个“你们对新人有什么培训计划，因为我基本上其实啥都不懂”这种问题，由于我还是个想做程序员的妹子，于是吸引到了他们的注意。宣讲会完了立刻就是面试。这时我才知道，原来这不是宣讲会来的，是之前他们就对目标工程师们发了邀请，或者之前他们就有投简历了，现在只是来现场集体面试顺便讲一下公司人才发展制度。本来我只是来听听罢了，结果在这种气氛的感染下，我也大胆的投了简历。第二天通知我去面试，我已经很惊讶了。第二天的面试在一个酒店，气氛比较诡异。面试先是LN和我单独聊了聊我的想法，记得当时他说《黑客和画家》那本书就是大忽悠，当时我就嗅出一丝奇怪的气息——作为一个技术人，你怎么可以这么说呢！程序员们不都是有理想吗！技术这么让人激动的事情，你怎么可以这么说呢！MZ不是口口声声说是有梦想的公司吗！这一点后面的确也验证了一些，这里就按下不表了。后面就让我做基础的面试题，我做的真是稀烂呀，后面被后来的老大压力测试般的面试搞的很尴尬（后来才知道他是A公司来的，这种面试方式就不奇怪了），走的时候我几乎是绝望的走出酒店门了。最奇葩的是走到酒店门口，接到他们的电话，问我高考分数，我说6XX，他们就震惊了。（而且我在大学学习也不是太差呀，毕竟是可以保研的，o(￣ヘ￣o) 哼）后面竟然接到了offer，让我更震惊了。但是我知道，我自己并能达到技术要求，如果不是因为我是女生、我是华科毕业的而且高考分数还不算太低，他们是不会要我的。后来也知道了，自己其实算是一个人才培养的“试验品”，所以更要好好工作努力成长才对得起他们给的机会。&lt;/p&gt;
&lt;p&gt;&lt;img alt="2012北京的“蓝天计划”海报" src="http://m3.img.srcdd.com/farm4/d/2014/0222/12/D2A992F22FF3B7F3C9DF28A6DCF200D9_B500_900_500_666.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;13年的五一，我依依不舍的告别了自己北京的父母和支教生涯快结束回武汉过节休息的金老湿，一个人来到中国最南方的珠海，这个陌生的地方（嗯，其实也不陌生啦，之前和金老湿来过一次）。永远记得第一眼看到MZ大楼的样子！好棒！新的生活开始了！好激动！一个人拎着硕大的几个箱子进入报道，然后入住宿舍。第三天找到了附近小区的正规住房，开始了新生活。&lt;/p&gt;
&lt;p&gt;&lt;img alt="刚刚来公司第一天看到的第一眼。Well, this is it!" src="http://m1.img.srcdd.com/farm5/d/2014/0222/10/C435836F09E794875D4F46AA6FDCCB4B_B500_900_500_375.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;前几个月总结的，我觉得现在拿来依然差不多，还是技术很差：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Java本身语言的技能：没有增进，反而因为使用了框架很多东西没有自己写过有些退化。写东西还是太多的hardcode。&lt;/li&gt;
&lt;li&gt;Java EE部分的知识： 最开始读了一些书，了解了JSP&amp;amp;Servlet的部分知识，但是还是并没有自己应用过，所以看了就忘了，只是记在脑子里，做了项目后有一定的了解，但并没有融会贯通的完全了解。&lt;/li&gt;
&lt;li&gt;系统的构架：参与了BI项目，所以了解了一些三层构架的东西。数据库的结构在项目中参考了，但是并不会自己构建设计数据库。&lt;/li&gt;
&lt;li&gt;发布和服务器相关的：Linux的技术。几乎等于完全不会。&lt;/li&gt;
&lt;li&gt;前端知识：BI用的是Ext JS 4.X，还是没有学会用，改BI项目还是可以的，自己写还是做不太好。因为JS没有学好，只会非常基础的东西，事实上并没有怎么搞懂这个是什么。CSS基本算不会吧。补充：BI最近改用了JQuery，因为现在的前端很给力，所以自己也没有太多接触JQuery了，有点懒惰心理。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;之所以工作这么久还是进步这么慢，虽然和自己之前完全没有学过有关，但是仍然和现在自己的学习方法错误有很大的关系。先看书后写代码的学习方法并不是我们这个职业的正确的学习方式，想要改变就要大胆写代码。&lt;/p&gt;
&lt;p&gt;最近打算动手起来，业余时间也要做自己的项目。目前打算先建立起自己的博客，每天学到的东西不管在别人看起来再简单，都要记录下来。因为我目前不想让自己的精力太分散就不花精力学ruby、php之类的了，找到一个博客系统b3log，搭建起来顺便看看它们的源码可以学到不少东西。争取在上半年做好这个目标，然后，就用java开发自己在公关公司离职前构想的那个统计的微博爬虫。目前2014年的业余计划就是这样。&lt;/p&gt;
&lt;p&gt;工作上，学会时间管理，每个需求前都要估算下自己需要的时间，做好后写下自己每天的总结。&lt;/p&gt;
&lt;p&gt;总体的目标，还是不变。给自己三年的时间做到专业吧！加油！&lt;/p&gt;</content><category term="工作总结"></category><category term="日记"></category></entry></feed>